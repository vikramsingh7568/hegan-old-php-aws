{"version":3,"sources":["app/views/admin/medicine-category/EditMedicineCategory.js"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","FlexBox","Box","height","padding","position","display","alignItems","validationSchema","justifyContent","Yup","shape","name","min","required","m_commission","d_commission","w_commission","status","EditMedicineCategory","id","useParams","navigate","useTheme","useNavigate","useState","loading","setLoading","medicineCategory","setMedicineCategory","useEffect","fetchData","axios","get","then","response","post","row_id","data","response_code","swal","title","text","message","icon","catch","error","handleFormSubmit","values","errors","setErrors","console","e","className","routeSegments","path","container","spacing","item","sm","xs","titleTypographyProps","variant","fontSize","fontWeight","textTransform","textAlign","onSubmit","initialValues","enableReinitialize","touched","handleChange","handleBlur","handleSubmit","fullWidth","type","label","onBlur","value","onChange","helperText","Boolean","sx","mb","labelId","color","my"],"mappings":"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","file":"static/js/33.9a428e3f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n    Box,\r\n    Card,\r\n    Divider,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid, TextField, FormControl, Select, InputLabel, MenuItem, styled, useTheme\r\n} from '@mui/material';\r\n\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Formik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n    {\r\n        margin: \"30px\",\r\n        [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n        \"& .breadcrumb\": {\r\n            marginBottom: \"30px\",\r\n            [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n        },\r\n    }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n}));\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .min(3, 'Medicine Category Name must be 3 character length')\r\n        .required('Medicine Category Name is required!'),\r\n    m_commission: Yup.number().required('Manufacture Default commission is required!'),\r\n    d_commission: Yup.number().required('Distributor Default commission is required!'),\r\n    w_commission: Yup.number().required('Whole Seller commission is required!'),\r\n    status: Yup.string().required('Status is required!'),\r\n});\r\n\r\nconst EditMedicineCategory = () => {\r\n    const { id } = useParams();\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    const [medicineCategory, setMedicineCategory] = useState({\r\n        name: '',\r\n        m_commission: '',\r\n        d_commission: '',\r\n        w_commission: '',\r\n        status: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    /**\r\n     * Fetching data from server.\r\n     */\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await axios.get('/sanctum/csrf-cookie').then(response => {\r\n                axios.post('/api/admin/get-medicine-category', {\r\n                    row_id: id\r\n                })\r\n                    .then(response => {\r\n                        if (response.data.response_code === 200) {\r\n                            setMedicineCategory(response.data.data);\r\n                        } else if (response.data.response_code === 401) {\r\n                            swal({\r\n                                title: \"Warning!\",\r\n                                text: response.data.message,\r\n                                icon: \"warning\",\r\n                            });\r\n                            navigate('/dashboard/medicine-categories/list');\r\n                        } else {\r\n                            swal({\r\n                                title: \"Warning!\",\r\n                                text: response.data.message,\r\n                                icon: \"warning\",\r\n                            });\r\n                        }\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(function (error) {\r\n                        setLoading(false);\r\n                    });\r\n            });\r\n        } catch (e) {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleFormSubmit = async (values, errors) => {\r\n        setLoading(true);\r\n        try {\r\n            axios.get('/sanctum/csrf-cookie').then(response => {\r\n                axios.post('/api/admin/update-medicine-category', {\r\n                    row_id: id,\r\n                    name: values.name,\r\n                    m_commission: values.m_commission,\r\n                    d_commission: values.d_commission,\r\n                    w_commission: values.w_commission,\r\n                    status: values.status,\r\n                })\r\n                    .then(response => {\r\n                        if (response.data.response_code === 200) {\r\n                            swal({\r\n                                title: \"Done!\",\r\n                                text: response.data.message,\r\n                                icon: \"success\",\r\n                            });\r\n                            navigate('/dashboard/medicine-categories/list');\r\n                        } else if (response.data.response_code == 412) {\r\n                            swal({\r\n                                title: \"Errors!\",\r\n                                text: response.data.message,\r\n                                icon: \"error\",\r\n                            });\r\n                        } else if (response.data.response_code == 401) {\r\n                            swal({\r\n                                title: \"Warning!\",\r\n                                text: response.data.message,\r\n                                icon: \"warning\",\r\n                            });\r\n                            errors.setErrors(response.data.errors);\r\n                        } else {\r\n                            errors.setErrors(response.data.errors);\r\n                        }\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                    });\r\n            });\r\n        } catch (e) {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"edit-college-course\">\r\n                <Box className=\"breadcrumb\">\r\n                    <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"Edit Medicine Category\" }]} />\r\n                </Box>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={8} xs={12}>\r\n                        <Card className=\"card\" >\r\n                            <CardHeader\r\n                                title=\"Edit Medicine Category\"\r\n                                titleTypographyProps={{\r\n                                    variant: \"h4\",\r\n                                    fontSize: '16px',\r\n                                    fontWeight: '600',\r\n                                    textTransform: 'uppercase',\r\n                                    textAlign: 'center'\r\n                                }}\r\n                            />\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <Formik\r\n                                    onSubmit={(values, errors) => {\r\n                                        handleFormSubmit(values, errors);\r\n                                    }\r\n                                    }\r\n                                    initialValues={medicineCategory}\r\n                                    enableReinitialize={true}\r\n                                    validationSchema={validationSchema}\r\n                                >\r\n                                    {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                // size=\"small\"\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                label=\"Medicine Category Name\"\r\n                                                variant=\"outlined\"\r\n                                                onBlur={handleBlur}\r\n                                                value={values.name}\r\n                                                onChange={handleChange}\r\n                                                helperText={touched.name && errors.name}\r\n                                                error={Boolean(errors.name && touched.name)}\r\n                                                sx={{ mb: 3 }}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                // size=\"small\"\r\n                                                type=\"number\"\r\n                                                name=\"m_commission\"\r\n                                                label=\"Manufacture Default Commission\"\r\n                                                variant=\"outlined\"\r\n                                                onBlur={handleBlur}\r\n                                                value={values.m_commission}\r\n                                                onChange={handleChange}\r\n                                                helperText={touched.m_commission && errors.m_commission}\r\n                                                error={Boolean(errors.m_commission && touched.m_commission)}\r\n                                                sx={{ mb: 3 }}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                type=\"number\"\r\n                                                name=\"d_commission\"\r\n                                                label=\"Distributor Default Commission\"\r\n                                                variant=\"outlined\"\r\n                                                onBlur={handleBlur}\r\n                                                value={values.d_commission}\r\n                                                onChange={handleChange}\r\n                                                helperText={touched.d_commission && errors.d_commission}\r\n                                                error={Boolean(errors.d_commission && touched.d_commission)}\r\n                                                sx={{ mb: 3 }}\r\n                                            />\r\n\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                type=\"number\"\r\n                                                name=\"w_commission\"\r\n                                                label=\"Whole Seller Default Commission\"\r\n                                                variant=\"outlined\"\r\n                                                onBlur={handleBlur}\r\n                                                value={values.w_commission}\r\n                                                onChange={handleChange}\r\n                                                helperText={touched.w_commission && errors.w_commission}\r\n                                                error={Boolean(errors.w_commission && touched.w_commission)}\r\n                                                sx={{ mb: 3 }}\r\n                                            />\r\n                                            <FormControl fullWidth\r\n                                                sx={{ mb: 3 }}\r\n                                            >\r\n                                                <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"status-label\"\r\n                                                    id=\"status\"\r\n                                                    name=\"status\"\r\n                                                    label=\"Status\"\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"outlined\"\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.status}\r\n                                                    // helperText={touched.status && errors.status}\r\n                                                    error={Boolean(errors.status && touched.status)}\r\n                                                >\r\n                                                    <MenuItem value={'active'}>Active</MenuItem>\r\n                                                    <MenuItem value={'in-active'}>In Active</MenuItem>\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <LoadingButton\r\n                                                type=\"submit\"\r\n                                                color=\"primary\"\r\n                                                loading={loading}\r\n                                                variant=\"contained\"\r\n                                                sx={{ my: 2 }}\r\n                                            >\r\n                                                Update\r\n                                            </LoadingButton>\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditMedicineCategory;\r\n"],"sourceRoot":""}