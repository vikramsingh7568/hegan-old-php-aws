{"version":3,"sources":["app/views/admin/users/ApprovedRegistrations.js"],"names":["StyledTable","styled","Table","whiteSpace","paddingLeft","paddingRight","textTransform","Container","theme","margin","breakpoints","down","marginBottom","Box","height","padding","position","ApprovedRegistrations","useState","page","setPage","rowsPerPage","setRowsPerPage","users","setUsers","setLoading","useEffect","fetchData","axios","get","then","response","post","data","response_code","catch","error","console","className","routeSegments","name","path","title","titleTypographyProps","variant","fontSize","fontWeight","textAlign","width","overflow","align","sx","slice","map","row","index","first_name","last_name","firm_name","user_name","mobile_no","register_as","gst_no","fssai_no","status","color","size","component","Link","to","id","m","onClick","e","row_id","swal","text","icon","buttons","dangerMode","isConfirm","message","colSpan","px","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","event","target","value","nextIconButtonProps","backIconButtonProps"],"mappings":"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","file":"static/js/36.b4bf3d34.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport {\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  CardHeader,\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Button,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\n// import { LoadingButton } from '@mui/lab';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n  {\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n      marginBottom: \"30px\",\r\n      [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n  }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  // background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst ApprovedRegistrations = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [users, setUsers] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetching data from server.\r\n   */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        // Get Pending User list\r\n        axios.post('/api/admin/get-approve-users-list')\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setUsers(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            } else {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const __rowDelete = (e, row_id, name) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover \\\"\" + name + \"\\\" College Course!\",\r\n      icon: \"warning\",\r\n      buttons: [\r\n        'No, cancel it!',\r\n        'Yes, I am sure!'\r\n      ],\r\n      dangerMode: true,\r\n    }).then(function (isConfirm) {\r\n      if (isConfirm) {\r\n        try {\r\n          axios.get('/sanctum/csrf-cookie').then(response => {\r\n            axios.post('/api/admin/delete-college-course', {\r\n              'row_id': row_id\r\n            })\r\n              .then(response => {\r\n                if (response.data.status === 200) {\r\n                  fetchData();\r\n                  swal({\r\n                    title: 'Done!',\r\n                    text: response.data.message,\r\n                    icon: 'success'\r\n                  })\r\n                } else if (response.data.status === 412) {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                } else {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                }\r\n                setLoading(false);\r\n              })\r\n              .catch(function (error) {\r\n                setLoading(false);\r\n                console.error(error);\r\n              });\r\n          });\r\n        } catch (e) {\r\n          setLoading(false);\r\n        }\r\n      } else {\r\n        swal(\"Cancelled\", \"Your data is safe :)\", \"error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"Approved Registrations\" }]} />\r\n        </Box>\r\n        <Card title=\"Approved Registrations\">\r\n          <CardHeader\r\n            // avatar={<GroupIcon>A</GroupIcon>}\r\n            title=\"Approved Registrations\"\r\n            titleTypographyProps={{\r\n              variant: \"h4\",\r\n              fontSize: '16px',\r\n              fontWeight: '600',\r\n              textTransform: 'uppercase',\r\n              textAlign: 'center'\r\n            }}\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <StyledTable>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\" sx={{ width: '50px' }}>Sr.No.</TableCell>\r\n                    <TableCell align=\"left\">Name</TableCell>\r\n                    <TableCell align=\"left\">Firm Name</TableCell>\r\n                    <TableCell align=\"left\">User Code</TableCell>\r\n                    <TableCell align=\"left\">Mobile No</TableCell>\r\n                    <TableCell align=\"left\">Company Type</TableCell>\r\n                    <TableCell align=\"left\">GST No.</TableCell>\r\n                    <TableCell align=\"left\">FSSAI No.</TableCell>\r\n                    <TableCell align=\"center\">Status</TableCell>\r\n                    <TableCell align=\"center\" sx={{ width: '210px' }}>Action</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users ? users\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => (\r\n                      <TableRow key={index}>\r\n\r\n                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                        <TableCell align=\"left\">{row.first_name + ' ' + row.last_name}</TableCell>\r\n                        <TableCell align=\"left\">{row.firm_name}</TableCell>\r\n                        <TableCell align=\"left\">{row.user_name}</TableCell>\r\n                        <TableCell align=\"left\">{row.mobile_no}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {(() => {\r\n                            switch (row.register_as) {\r\n                              case 'M':\r\n                                return 'Manufacturer'\r\n                              case 'D':\r\n                                return 'Distributor'\r\n                              case 'W':\r\n                                return 'Wholesaler'\r\n                              case 'R':\r\n                                return 'Retailer'\r\n                              case 'H':\r\n                                return 'Hospital'\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.gst_no}</TableCell>\r\n                        <TableCell align=\"left\">{row.fssai_no}</TableCell>\r\n                        {/* <TableCell align=\"center\">{row.created_at}</TableCell> */}\r\n                        {/* <TableCell align=\"center\">{row.updated_at}</TableCell> */}\r\n                        <TableCell align=\"center\">\r\n                          {(() => {\r\n                            switch (row.status) {\r\n                              case 'active':\r\n                                return <Button color=\"success\" variant=\"contained\" size=\"small\">Approved</Button>\r\n                              case 'in-active':\r\n                                return <Button color=\"info\" variant=\"contained\" size=\"small\">In Active</Button>\r\n                              case 'pending':\r\n                                return <Button color=\"warning\" variant=\"contained\" size=\"small\">Pending</Button>\r\n                              case 'rejected':\r\n                                return <Button color=\"error\" variant=\"contained\" size=\"small\">Rejected</Button>\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button title=\"View\" component={Link}\r\n                            to={`/dashboard/user-info/${row.id}`}\r\n                            color=\"primary\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                            View\r\n                          </Button>\r\n                          <Button title=\"Edit\" component={Link}\r\n                            to={`/dashboard/update-user-info/${row.id}`}\r\n                            color=\"info\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                            Edit\r\n                          </Button>\r\n                          <Button title=\"Delete\" component={Link} to={'#'} onClick={(e) => __rowDelete(e, row.id, row.first_name)}\r\n                            color=\"error\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                            Delete\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )) : <TableRow><TableCell align=\"center\" colSpan={10}><CircularProgress className=\"progress\" /></TableCell></TableRow>}\r\n                </TableBody>\r\n              </StyledTable>\r\n              {users ?\r\n                <TablePagination\r\n                  sx={{ px: 2 }}\r\n                  page={page}\r\n                  component=\"div\"\r\n                  rowsPerPage={rowsPerPage}\r\n                  count={users.length}\r\n                  onPageChange={handleChangePage}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                  backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n                />\r\n                : <>\r\n\r\n                </>\r\n              }\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default ApprovedRegistrations;\r\n"],"sourceRoot":""}