{"version":3,"sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","app/views/admin/medicine-brand/MedicineBrandList.js"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","getSwitchUtilityClass","switchClasses","SwitchRoot","overridesResolver","styles","display","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","thumb","switchBase","transform","SwitchSwitchBase","color","theme","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","track","backgroundColor","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","black","SwitchThumb","boxShadow","shadows","Switch","inProps","useThemeProps","sx","composedClasses","StyledTable","Table","whiteSpace","paddingLeft","paddingRight","textTransform","Container","breakpoints","down","marginBottom","Box","MedicineBrandList","useState","page","setPage","rowsPerPage","setRowsPerPage","medicineBrands","setMedicineBrands","setLoading","useEffect","fetchData","axios","get","then","response","post","data","response_code","status","catch","error","console","__rowChangeStatus","e","row_id","swal","title","text","buttons","dangerMode","isConfirm","message","routeSegments","path","titleTypographyProps","variant","fontSize","fontWeight","textAlign","align","slice","map","row","index","onClick","created_at","Link","to","m","colSpan","px","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps"],"mappings":"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","file":"static/js/21.b345852e.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport {\r\n    Card,\r\n    Divider,\r\n    CardContent,\r\n    CardHeader,\r\n    Box,\r\n    Icon,\r\n    IconButton,\r\n    Button,\r\n    styled,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    FormGroup, FormControlLabel, Switch,\r\n    CircularProgress\r\n} from \"@mui/material\";\r\n// import { LoadingButton } from '@mui/lab';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n    {\r\n        margin: \"30px\",\r\n        [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n        \"& .breadcrumb\": {\r\n            marginBottom: \"30px\",\r\n            [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n        },\r\n    }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n    // background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst MedicineBrandList = () => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [medicineBrands, setMedicineBrands] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    /**\r\n     * Fetching data from server.\r\n     */\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await axios.get('/sanctum/csrf-cookie').then(response => {\r\n                axios.post('/api/admin/get-medicine-brands')\r\n                    .then(response => {\r\n                        if (response.data.response_code === 200) {\r\n                            setMedicineBrands(response.data.data);\r\n                        } else if (response.data.status === 401) {\r\n\r\n                        } else {\r\n\r\n                        }\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(function (error) {\r\n                        setLoading(false);\r\n                        console.error(error);\r\n                    });\r\n            });\r\n        } catch (e) {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const __rowDelete = (e, row_id, name) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"You will not be able to recover \\\"\" + name + \"\\\" Medicine Brands!\",\r\n            icon: \"warning\",\r\n            buttons: [\r\n                'No, cancel it!',\r\n                'Yes, I am sure!'\r\n            ],\r\n            dangerMode: true,\r\n        }).then(function (isConfirm) {\r\n            if (isConfirm) {\r\n                try {\r\n                    axios.get('/sanctum/csrf-cookie').then(response => {\r\n                        axios.post('/api/admin/delete-medicine-brand', {\r\n                            'row_id': row_id\r\n                        })\r\n                            .then(response => {\r\n                                if (response.data.response_code === 200) {\r\n                                    fetchData();\r\n                                    swal({\r\n                                        title: 'Done!',\r\n                                        text: response.data.message,\r\n                                        icon: 'success'\r\n                                    })\r\n                                } else if (response.data.response_code === 412) {\r\n                                    swal({\r\n                                        title: \"Errors!\",\r\n                                        text: response.data.message,\r\n                                        icon: \"error\",\r\n                                    });\r\n                                } else {\r\n                                    swal({\r\n                                        title: \"Errors!\",\r\n                                        text: response.data.message,\r\n                                        icon: \"error\",\r\n                                    });\r\n                                }\r\n                                setLoading(false);\r\n                            })\r\n                            .catch(function (error) {\r\n                                setLoading(false);\r\n                                console.error(error);\r\n                            });\r\n                    });\r\n                } catch (e) {\r\n                    setLoading(false);\r\n                }\r\n            } else {\r\n                swal(\"Cancelled\", \"Your data is safe :)\", \"error\");\r\n            }\r\n        });\r\n    }\r\n    const __rowChangeStatus = (e, row_id, name, status) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"You want to change status of \\\"\" + name + \"\\\" Medicine Brands!\",\r\n            icon: \"warning\",\r\n            buttons: [\r\n                'No, cancel it!',\r\n                'Yes, I am sure!'\r\n            ],\r\n            dangerMode: true,\r\n        }).then(function (isConfirm) {\r\n            if (isConfirm) {\r\n                try {\r\n                    axios.get('/sanctum/csrf-cookie').then(response => {\r\n                        axios.post('/api/admin/medicine-brand-change-status', {\r\n                            'row_id': row_id,\r\n                            status: status\r\n                        })\r\n                            .then(response => {\r\n                                if (response.data.response_code === 200) {\r\n                                    fetchData();\r\n                                    swal({\r\n                                        title: 'Done!',\r\n                                        text: response.data.message,\r\n                                        icon: 'success'\r\n                                    })\r\n                                } else if (response.data.response_code === 412) {\r\n                                    swal({\r\n                                        title: \"Errors!\",\r\n                                        text: response.data.message,\r\n                                        icon: \"error\",\r\n                                    });\r\n                                } else {\r\n                                    swal({\r\n                                        title: \"Errors!\",\r\n                                        text: response.data.message,\r\n                                        icon: \"error\",\r\n                                    });\r\n                                }\r\n                                setLoading(false);\r\n                            })\r\n                            .catch(function (error) {\r\n                                setLoading(false);\r\n                                console.error(error);\r\n                            });\r\n                    });\r\n                } catch (e) {\r\n                    setLoading(false);\r\n                }\r\n            } else {\r\n                swal(\"Cancelled\", \"Your data is safe :)\", \"error\");\r\n            }\r\n        });\r\n    }\r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Box className=\"breadcrumb\">\r\n                    <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"Medicine Brands\" }]} />\r\n                </Box>\r\n                <Card title=\"Medicine Brands\">\r\n                    <CardHeader\r\n                        // avatar={<GroupIcon>M</GroupIcon>}\r\n                        title=\"Medicine Brands\"\r\n                        titleTypographyProps={{\r\n                            variant: \"h4\",\r\n                            fontSize: '16px',\r\n                            fontWeight: '600',\r\n                            textTransform: 'uppercase',\r\n                            textAlign: 'center'\r\n                        }}\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">Sr. No.</TableCell>\r\n                                        <TableCell align=\"left\">Brand Name</TableCell>\r\n                                        <TableCell align=\"center\">Status</TableCell>\r\n                                        <TableCell align=\"center\">Created At</TableCell>\r\n                                        {/* <TableCell align=\"center\">Updated At</TableCell> */}\r\n                                        <TableCell align=\"center\">Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {medicineBrands ? medicineBrands\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row, index) => (\r\n                                            <TableRow key={index}>\r\n\r\n                                                <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                                <TableCell align=\"left\">{row.name}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {row.status == 'active' ?\r\n                                                        <Switch onClick={(e) => __rowChangeStatus(e, row.id, row.name, 'in-active')} size=\"small\" defaultChecked title=\"Active\" />\r\n                                                        :\r\n                                                        <Switch onClick={(e) => __rowChangeStatus(e, row.id, row.name, 'active')} size=\"small\" title=\"In Active\" />\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">{row.created_at}</TableCell>\r\n                                                {/* <TableCell align=\"center\">{row.updated_at}</TableCell> */}\r\n                                                <TableCell align=\"right\">\r\n                                                    <Button title=\"Edit\" component={Link}\r\n                                                        to={`/dashboard/medicine-brand/edit/${row.id}`}\r\n                                                        color=\"info\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                                                        Edit\r\n                                                    </Button>\r\n                                                    <Button title=\"Delete\" component={Link} to={'#'} onClick={(e) => __rowDelete(e, row.id, row.name)}\r\n                                                        color=\"error\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )) : <TableRow><TableCell align=\"center\" colSpan={5}><CircularProgress className=\"progress\" /></TableCell></TableRow>}\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                            {medicineBrands ?\r\n                                <TablePagination\r\n                                    sx={{ px: 2 }}\r\n                                    page={page}\r\n                                    component=\"div\"\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    count={medicineBrands.length}\r\n                                    onPageChange={handleChangePage}\r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                    nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                                    backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n                                />\r\n                                : <>\r\n\r\n                                </>\r\n                            }\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default MedicineBrandList;\r\n"],"sourceRoot":""}