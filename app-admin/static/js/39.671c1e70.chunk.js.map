{"version":3,"sources":["app/views/admin/users/UserInfo.js"],"names":["Item","styled","theme","marginBottom","fontSize","fontWeight","color","ItemContent","Container","margin","breakpoints","down","ContentBox","Box","height","padding","position","validationSchema","Yup","shape","status","when","is","then","required","otherwise","UserInfo","user_id","useParams","useTheme","useNavigate","useState","user","setUser","loading","setLoading","useEffect","fetchData","axios","get","response","post","data","response_code","catch","error","console","className","routeSegments","name","path","title","titleTypographyProps","variant","palette","primary","main","width","overflow","container","item","sm","xs","lg","first_name","last_name","email","mobile_no","firm_name","user_name","address","state_name","pin_code","dl_no_1","dl_no_2","gst_no","fssai_no","register_as","style","account_name","account_no","branch","ifsc_code","signature","src","alt","onSubmit","values","errors","swal","text","icon","id","userCategories","message","setErrors","e","log","handleFormSubmit","initialValues","touched","handleChange","handleBlur","handleSubmit","map","row","index","spacing","render","arrayHelpers","fullWidth","disabled","size","type","onBlur","value","medicine_category","onChange","helperText","Boolean","sx","mb","commission","m_default_commission","d_default_commission","w_default_commission","defaultValue","control","label","alignItems","m","display","justifyContent","mt"],"mappings":"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","file":"static/js/39.671c1e70.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link, useParams, NavLink, useNavigate } from 'react-router-dom';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Formik, Form, Field, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport {\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  CardHeader,\r\n  Box,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  Button,\r\n  styled,\r\n  TextField,\r\n  useTheme,\r\n  RadioGroup, FormControlLabel, Radio\r\n\r\n} from \"@mui/material\";\r\n\r\n\r\nconst Item = styled(\"div\")(({ theme }) => (\r\n  {\r\n    marginBottom: \"5px\",\r\n    fontSize: '16px',\r\n    fontWeight: '400',\r\n    color: '#484747'\r\n  }\r\n));\r\nconst ItemContent = styled(\"div\")(({ theme }) => (\r\n  {\r\n    marginBottom: \"15px\",\r\n    fontSize: '16px',\r\n    fontWeight: '600',\r\n  }\r\n));\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n  {\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n      marginBottom: \"30px\",\r\n      [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n  }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '10px',\r\n  position: 'relative',\r\n  // background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  // status: Yup.string()\r\n  //   .required('User Accton is required!'),\r\n  status: Yup.string().when('status', {\r\n    is: (status) => status === 'pending',\r\n    then: Yup.string().required('Please checked Approved or Rejected action!'),\r\n    otherwise: Yup.string(),\r\n  }),\r\n}, [['status', 'status']]);\r\n\r\nconst UserInfo = () => {\r\n\r\n  const { user_id } = useParams();\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetching data from server.\r\n   */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/admin/get-user-info', {\r\n          user_id: user_id\r\n        })\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setUser(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            } else {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n\r\n  const handleFormSubmit = (values, errors) => {\r\n\r\n    try {\r\n      if (values.status == 'pending') {\r\n        swal({\r\n          title: \"Warning!\",\r\n          text: 'Please select Approved or Rejected approvel action!',\r\n          icon: \"warning\",\r\n        });\r\n        return false;\r\n      }\r\n      setLoading(true);\r\n      axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/admin/user-update-status-commission', {\r\n          user_id: values.id,\r\n          status: values.status,\r\n          userCategories: values.userCategories,\r\n        })\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setUser(response.data.data);\r\n              swal({\r\n                title: \"Good job!\",\r\n                text: response.data.message,\r\n                icon: \"success\",\r\n              });\r\n              // navigate('/');\r\n            } else {\r\n              errors.setErrors(response.data.errors);\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"User Information\" }]} />\r\n        </Box>\r\n\r\n        <Card title=\"User Information\">\r\n          <ContentBox>\r\n            <CardHeader\r\n              title=\"User Information\"\r\n              titleTypographyProps={{\r\n                variant: \"h4\",\r\n                fontSize: '18px',\r\n                fontWeight: '600',\r\n                // textTransform: 'uppercase',\r\n                color: theme.palette.primary.main\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <Box width=\"100%\" overflow=\"auto\">\r\n                {user && (\r\n                  <>\r\n                    <Grid container>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>First Name</Item>\r\n                        <ItemContent>{user.first_name}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>Last Name</Item>\r\n                        <ItemContent>{user.last_name}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>Email</Item>\r\n                        <ItemContent>{user.email}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>Mobile No.</Item>\r\n                        <ItemContent>{user.mobile_no}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>Firm Name</Item>\r\n                        <ItemContent>{user.firm_name}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>User Code</Item>\r\n                        <ItemContent>{user.user_name}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>Address</Item>\r\n                        <ItemContent>{user.address}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>State</Item>\r\n                        <ItemContent>{user.state_name}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={4}>\r\n                        <Item>Pin Code</Item>\r\n                        <ItemContent>{user.pin_code}</ItemContent>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <br />\r\n                    <Grid container>\r\n                      <Grid item sm={12} xs={12} lg={3}>\r\n                        <Item>DL No 1</Item>\r\n                        <ItemContent>{(user.dl_no_1) ? user.dl_no_1 : '-'}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={3}>\r\n                        <Item>DL No 2</Item>\r\n                        <ItemContent>{(user.dl_no_2 ? user.dl_no_2 : '-')}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={3}>\r\n                        <Item>GST No.</Item>\r\n                        <ItemContent>{(user.gst_no) ? user.gst_no : '-'}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={12} xs={12} lg={3}>\r\n                        <Item>FSSAI No.</Item>\r\n                        <ItemContent>{(user.fssai_no) ? user.fssai_no : '-'}</ItemContent>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <br />\r\n                    <Grid item sm={12} xs={12} lg={3}>\r\n                      <Item>Register As</Item>\r\n                      <ItemContent>{(() => {\r\n                        switch (user.register_as) {\r\n                          case 'M':\r\n                            return 'Manufacturer'\r\n                          case 'D':\r\n                            return 'Distributor'\r\n                          case 'W':\r\n                            return 'Wholesaler'\r\n                          case 'R':\r\n                            return 'Retailer'\r\n                          case 'H':\r\n                            return 'Hospital'\r\n                          default:\r\n                            return null\r\n                        }\r\n                      })()}\r\n                      </ItemContent>\r\n                    </Grid>\r\n                    {(() => {\r\n                      switch (user.register_as) {\r\n                        case 'R':\r\n                          return 'Retailer'\r\n                        case 'H':\r\n                          return 'Hospital'\r\n                        default:\r\n                          return (\r\n                            <>\r\n                              <h4 style={{ color: theme.palette.primary.main, fontSize: '18px', }} >Bank Details</h4>\r\n                              <Grid container>\r\n                                <Grid item sm={12} xs={12} lg={3}>\r\n                                  <Item>Account Name</Item>\r\n                                  <ItemContent>{user.account_name}</ItemContent>\r\n                                </Grid>\r\n                                <Grid item sm={12} xs={12} lg={3}>\r\n                                  <Item>Account No.</Item>\r\n                                  <ItemContent>{user.account_no}</ItemContent>\r\n                                </Grid>\r\n                                <Grid item sm={12} xs={12} lg={3}>\r\n                                  <Item>Branch</Item>\r\n                                  <ItemContent>{user.branch}</ItemContent>\r\n                                </Grid>\r\n                                <Grid item sm={12} xs={12} lg={3}>\r\n                                  <Item>IFSC Code</Item>\r\n                                  <ItemContent>{user.ifsc_code}</ItemContent>\r\n                                </Grid>\r\n                                <Grid item sm={12} xs={12} lg={3}>\r\n                                  <Item>Signature</Item>\r\n                                  <ItemContent>{(user.signature) ? (\r\n                                    <>\r\n                                      <img src={user.signature} alt=\"Signature\" style={{ width: '100px' }} />\r\n                                    </>\r\n                                  ) : <>No Signature found.</>}</ItemContent>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </>\r\n                          )\r\n                      }\r\n                    })()}\r\n\r\n                    <Divider />\r\n                    <br />\r\n                    <h4 style={{ color: theme.palette.primary.main, fontSize: '18px', }}>Commissions</h4>\r\n\r\n                    <Formik\r\n                      onSubmit={(values, errors) => {\r\n                        handleFormSubmit(values, errors);\r\n                      }\r\n                      }\r\n                      initialValues={user}\r\n                      validationSchema={validationSchema}\r\n                    >\r\n                      {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          {user.userCategories ? user.userCategories\r\n                            .map((row, index) => (\r\n                              <Grid container spacing={2} key={'1_gc_' + (1 + index)}>\r\n                                <Grid item sm={6} xs={12} lg={3} key={'1_g_' + (1 + index)}>\r\n                                  <Item key={'1_gi_' + (1 + index)}>Category Name</Item>\r\n                                  <ItemContent key={'1_gic_' + (1 + index)}>\r\n                                    <FieldArray\r\n                                      name=\"user_categories\"\r\n                                      render={arrayHelpers => (\r\n                                        <TextField\r\n                                          key={'1_gic_input_' + (1 + index)}\r\n                                          fullWidth\r\n                                          disabled\r\n                                          size=\"small\"\r\n                                          name={`userCategories.${index}.medicine_category`}\r\n                                          type=\"text\"\r\n                                          variant=\"outlined\"\r\n                                          onBlur={handleBlur}\r\n                                          value={values.userCategories[index].medicine_category}\r\n                                          onChange={handleChange}\r\n                                          helperText={touched.medicine_category && errors.medicine_category}\r\n                                          error={Boolean(errors.medicine_category && touched.medicine_category)}\r\n                                          sx={{ mb: 2 }}\r\n                                        />\r\n                                      )}\r\n                                    />\r\n                                  </ItemContent>\r\n                                </Grid>\r\n                                {(() => {\r\n                                  switch (user.register_as) {\r\n                                    case 'R':\r\n                                      return null\r\n                                    case 'H':\r\n                                      return null\r\n                                    default:\r\n                                      return (\r\n                                        <>\r\n                                          <Grid item sm={6} xs={12} lg={3} key={'2_g_' + (1 + index)}>\r\n                                            <Item key={'2_gi_' + (1 + index)}>Commission %</Item>\r\n                                            <ItemContent key={'2_gic_' + (1 + index)}>\r\n                                              <FieldArray\r\n                                                name=\"user_categories\"\r\n                                                render={arrayHelpers => (\r\n                                                  <TextField\r\n                                                    key={'2_gic_input_' + (1 + index)}\r\n                                                    fullWidth\r\n                                                    size=\"small\"\r\n                                                    name={`userCategories.${index}.commission`}\r\n                                                    type=\"number\"\r\n                                                    variant=\"outlined\"\r\n                                                    onBlur={handleBlur}\r\n                                                    value={values.userCategories[index].commission}\r\n                                                    onChange={handleChange}\r\n                                                    helperText={touched.commission && errors.commission}\r\n                                                    error={Boolean(errors.commission && touched.commission)}\r\n                                                    sx={{ mb: 2 }}\r\n                                                  />\r\n                                                )}\r\n                                              />\r\n                                            </ItemContent>\r\n                                          </Grid>\r\n                                          {(() => {\r\n                                            switch (user.register_as) {\r\n                                              case 'M':\r\n                                                return (<>\r\n                                                  <Grid item sm={6} xs={12} lg={3} key={'3_g_' + (1 + index)}>\r\n                                                    <Item key={'3_gi_' + (1 + index)}>Default Commission %</Item>\r\n                                                    <ItemContent key={'3_gic_' + (1 + index)}>\r\n                                                      {row.m_default_commission} %\r\n                                                    </ItemContent>\r\n                                                  </Grid>\r\n                                                </>)\r\n                                              case 'D':\r\n                                                return (<>\r\n                                                  <Grid item sm={6} xs={12} lg={3} key={'3_g_' + (1 + index)}>\r\n                                                    <Item key={'3_gi_' + (1 + index)}>Default Commission %</Item>\r\n                                                    <ItemContent key={'3_gic_' + (1 + index)}>\r\n                                                      {row.d_default_commission} %\r\n                                                    </ItemContent>\r\n                                                  </Grid>\r\n                                                </>)\r\n                                              case 'W':\r\n                                                return (<>\r\n                                                  <Grid item sm={6} xs={12} lg={3} key={'3_g_' + (1 + index)}>\r\n                                                    <Item key={'3_gi_' + (1 + index)}>Default Commission %</Item>\r\n                                                    <ItemContent key={'3_gic_' + (1 + index)}>\r\n                                                      {row.w_default_commission} %\r\n                                                    </ItemContent>\r\n                                                  </Grid>\r\n                                                </>)\r\n                                              default:\r\n                                                return null\r\n                                            }\r\n                                          })()}\r\n\r\n                                        </>\r\n                                      )\r\n                                  }\r\n                                })()}\r\n                              </Grid>\r\n                            )) : <></>}\r\n                          <Grid container>\r\n                            <Grid item sm={6} xs={12} lg={12}>\r\n                              <RadioGroup\r\n                                row\r\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                defaultValue=\"active\"\r\n                                name=\"status\"\r\n                                sx={{ mb: 3 }}\r\n                                value={values.status}\r\n                                onChange={handleChange}\r\n                              >\r\n                                <FormControlLabel value=\"active\" control={<Radio />} label=\"Approved\" />\r\n                                <FormControlLabel value=\"rejected\" control={<Radio />} label=\"Rejected\" />\r\n                              </RadioGroup>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid container alignItems=\"right\">\r\n\r\n                            <Grid item sm={6} xs={12} lg={12}>\r\n                              {/* <Card variant=\"outlined\" sx={{ padding: '20px', border: '5px' }}>\r\n                                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\r\n                              </Card> */}\r\n                              <Box\r\n                                m={1}\r\n                                display=\"flex\"\r\n                                justifyContent=\"flex-end\"\r\n                                alignItems=\"right\"\r\n                              >\r\n                                <LoadingButton\r\n                                  type=\"submit\"\r\n                                  color=\"primary\"\r\n                                  loading={loading}\r\n                                  variant=\"contained\"\r\n                                  sx={{ mb: 2, mt: 3 }}\r\n                                >\r\n                                  Submit\r\n                                </LoadingButton>\r\n                              </Box>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </form>\r\n                      )}\r\n                    </Formik>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </ContentBox>\r\n        </Card>\r\n\r\n      </Container>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n"],"sourceRoot":""}