{"version":3,"sources":["app/views/admin/medicine-category/AddMedicineCategory.js"],"names":["Container","styled","theme","margin","breakpoints","down","marginBottom","FlexBox","Box","height","padding","position","display","alignItems","initialValues","justifyContent","name","m_commission","d_commission","w_commission","status","validationSchema","Yup","shape","min","required","AddMedicineCategory","useTheme","navigate","useNavigate","useState","loading","setLoading","handleFormSubmit","useAuth","login","values","errors","axios","get","then","response","post","data","response_code","swal","title","text","message","icon","setErrors","catch","error","console","e","className","routeSegments","path","container","spacing","item","sm","xs","titleTypographyProps","variant","fontSize","fontWeight","textTransform","textAlign","onSubmit","touched","handleChange","handleBlur","handleSubmit","fullWidth","type","label","onBlur","value","onChange","helperText","Boolean","sx","mb","id","labelId","color","my"],"mappings":"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","file":"static/js/32.457c7bf3.chunk.js","sourcesContent":["\r\nimport {\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid, TextField, FormControl, Select, InputLabel, MenuItem, styled, useTheme\r\n} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Formik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { Breadcrumb } from \"app/components\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n  {\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n      marginBottom: \"30px\",\r\n      [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n  }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  // background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\r\n\r\n// inital login credentials\r\nconst initialValues = {\r\n  name: '',\r\n  m_commission: '0',\r\n  d_commission: '0',\r\n  w_commission: '0',\r\n  status: 'active',\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(3, 'Medicine Category Name must be 3 character length')\r\n    .required('Medicine Category Name is required!'),\r\n  m_commission: Yup.number().required('Manufacture Default commission is required!'),\r\n  d_commission: Yup.number().required('Distributor Default commission is required!'),\r\n  w_commission: Yup.number().required('Whole Seller commission is required!'),\r\n  status: Yup.string().required('Status is required!'),\r\n});\r\n\r\nconst AddMedicineCategory = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  /**\r\n   * Handle Form submit\r\n   * \r\n   * @param {*} values \r\n   * @param {*} errors \r\n   */\r\n  const handleFormSubmit = async (values, errors) => {\r\n    setLoading(true);\r\n    try {\r\n      axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/admin/add-medicine-category', {\r\n          name: values.name,\r\n          m_commission: values.m_commission,\r\n          d_commission: values.d_commission,\r\n          w_commission: values.w_commission,\r\n          status: values.status,\r\n        })\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              swal({\r\n                title: \"Done!\",\r\n                text: response.data.message,\r\n                icon: \"success\",\r\n              });\r\n              navigate('/dashboard/medicine-categories/list');\r\n            } else if (response.data.response_code === 412) {\r\n              swal({\r\n                title: \"Errors!\",\r\n                text: response.data.message,\r\n                icon: \"error\",\r\n              });\r\n            } else if (response.data.response_code === 401) {\r\n              swal({\r\n                title: \"Warning!\",\r\n                text: response.data.message,\r\n                icon: \"warning\",\r\n              });\r\n              errors.setErrors(response.data.errors);\r\n            } else {\r\n              errors.setErrors(response.data.errors);\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"add -college-course\">\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"Add Medicine Category\" }]} />\r\n        </Box>\r\n        <Grid container spacing={2}>\r\n          <Grid item sm={8} xs={12}>\r\n            <Card className=\"card\" >\r\n              {/* <Container className=\"card\" > */}\r\n              <CardHeader\r\n                // avatar={<GroupAddIcon>U</GroupAddIcon>}\r\n                title=\"Add Medicine Category\"\r\n                titleTypographyProps={{\r\n                  variant: \"h4\",\r\n                  fontSize: '16px',\r\n                  fontWeight: '600',\r\n                  textTransform: 'uppercase',\r\n                  textAlign: 'center'\r\n                }}\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <Formik\r\n                  onSubmit={(values, errors) => {\r\n                    handleFormSubmit(values, errors);\r\n                  }\r\n                  }\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                >\r\n                  {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                      <TextField\r\n                        fullWidth\r\n                        // size=\"small\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        label=\"Medicine Category Name\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        helperText={touched.name && errors.name}\r\n                        error={Boolean(errors.name && touched.name)}\r\n                        sx={{ mb: 3 }}\r\n                      />\r\n                      <TextField\r\n                        fullWidth\r\n                        // size=\"small\"\r\n                        type=\"text\"\r\n                        name=\"m_commission\"\r\n                        label=\"Manufacture Default Commission\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        value={values.m_commission}\r\n                        onChange={handleChange}\r\n                        helperText={touched.m_commission && errors.m_commission}\r\n                        error={Boolean(errors.m_commission && touched.m_commission)}\r\n                        sx={{ mb: 3 }}\r\n                      />\r\n                      <TextField\r\n                        fullWidth\r\n                        // size=\"small\"\r\n                        type=\"text\"\r\n                        name=\"d_commission\"\r\n                        label=\"Distributor Default Commission\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        value={values.d_commission}\r\n                        onChange={handleChange}\r\n                        helperText={touched.d_commission && errors.d_commission}\r\n                        error={Boolean(errors.d_commission && touched.d_commission)}\r\n                        sx={{ mb: 3 }}\r\n                      />\r\n                      <TextField\r\n                        fullWidth\r\n                        // size=\"small\"\r\n                        type=\"text\"\r\n                        name=\"w_commission\"\r\n                        label=\"Whole Seller Default Commission\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        value={values.w_commission}\r\n                        onChange={handleChange}\r\n                        helperText={touched.w_commission && errors.w_commission}\r\n                        error={Boolean(errors.w_commission && touched.w_commission)}\r\n                        sx={{ mb: 3 }}\r\n                      />\r\n                      <FormControl fullWidth\r\n                        sx={{ mb: 3 }}\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                        <Select\r\n                          labelId=\"status-label\"\r\n                          id=\"status\"\r\n                          name=\"status\"\r\n                          label=\"Status\"\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          onBlur={handleBlur}\r\n                          value={values.status}\r\n                          // helperText={touched.status && errors.status}\r\n                          error={Boolean(errors.status && touched.status)}\r\n                        >\r\n                          <MenuItem value=\"active\">Active</MenuItem>\r\n                          <MenuItem value=\"in-active\">In Active</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                      <LoadingButton\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        loading={loading}\r\n                        variant=\"contained\"\r\n                        sx={{ my: 2 }}\r\n                      >\r\n                        Submit\r\n                      </LoadingButton>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n              </CardContent>\r\n              {/* </Container> */}\r\n            </Card>\r\n          </Grid>\r\n          <Grid item sm={4} xs={12}>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMedicineCategory;\r\n"],"sourceRoot":""}