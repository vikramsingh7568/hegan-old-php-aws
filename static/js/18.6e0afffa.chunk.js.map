{"version":3,"sources":["app/views/dashboard/Seller/OrderHistory/SalesList.js"],"names":["StyledTable","styled","Table","Container","theme","margin","breakpoints","down","marginBottom","Small","Box","height","padding","position","width","color","borderRadius","overflow","background","bgcolor","boxShadow","cursor","PurchaseList","palette","useTheme","bgError","error","main","bgPrimary","primary","bgSecondary","secondary","bgSuccess","success","bgSuccessLight","light","bgSecondaryDark","dark","useState","page","setPage","rowsPerPage","setRowsPerPage","tableData","setTableData","setLoading","useEffect","fetchData","axios","get","then","response","post","data","response_code","catch","console","className","routeSegments","name","path","title","titleTypographyProps","variant","fontSize","fontWeight","textTransform","textAlign","sx","minWidth","align","slice","map","row","index","to","id","hash_order_id","total_mrp","total_savings","total_payable","Moment","created_at","format","transaction_id","payment_status","status","onClick","e","row_id","order_id","swal","text","icon","buttons","dangerMode","isConfirm","reData","item","message","size","m","resetPw","Swal","fire","focusConfirm","html","showCancelButton","cancelButtonColor","confirmButtonText","confirmButtonColor","allowOutsideClick","preConfirm","invoice_number","document","getElementById","value","number_of_box","total_weight","swalval","v","dismiss","type","isConfirmed","__handleReadyToShip","component","Link","colSpan","px","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","event","target","nextIconButtonProps","backIconButtonProps"],"mappings":"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","file":"static/js/18.6e0afffa.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport swal from 'sweetalert';\r\nimport {\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  CardHeader,\r\n  Box,\r\n  Icon,\r\n  IconButton,\r\n  Button,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  CircularProgress,\r\n  useTheme\r\n} from \"@mui/material\";\r\n\r\nimport GroupIcon from '@mui/icons-material/Group';\r\n\r\nimport Moment from 'moment';\r\n\r\nimport { Breadcrumb } from \"app/components\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  // whiteSpace: \"pre\",\r\n  // \"& thead\": {\r\n  //   \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  // },\r\n  // \"& tbody\": {\r\n  //   \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  // },\r\n}));\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n  {\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n      marginBottom: \"30px\",\r\n      [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n  }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  // background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\nconst Small = styled('small')(({ bgcolor }) => ({\r\n  width: 50,\r\n  height: 15,\r\n  color: '#fff',\r\n  padding: '5px 8px',\r\n  borderRadius: '4px',\r\n  overflow: 'hidden',\r\n  background: bgcolor,\r\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n  cursor: 'pointer'\r\n}));\r\n\r\nconst PurchaseList = () => {\r\n  const { palette } = useTheme();\r\n  const bgError = palette.error.main;\r\n  const bgPrimary = palette.primary.main;\r\n  const bgSecondary = palette.secondary.main;\r\n  const bgSuccess = palette.success.main;\r\n  const bgSuccessLight = palette.success.light;\r\n  const bgSecondaryDark = palette.secondary.dark;\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(20);\r\n  const [tableData, setTableData] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetching data from server.\r\n   */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/client/get-sales-order-record')\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setTableData(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            } else {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const __handleReadyToShip = (row_id, hash_order_id) => {\r\n    const resetPw = async () => {\r\n      const swalval = await Swal.fire({\r\n        title: `Order Id: ${hash_order_id} `,\r\n        focusConfirm: false,\r\n        html: `\r\n        <input class=\"swal2-input\" id=\"invoice_number\" type=\"text\" placeholder=\"Invoice Number\" style=\"width: 80%;\"/><br />\r\n        <input class=\"swal2-input\" id=\"number_of_box\" type=\"text\" placeholder=\"No. of Boxes\" style=\"width: 80%;\"/><br />\r\n        <input class=\"swal2-input\" id=\"total_weight\" type=\"text\" placeholder=\"Total Weight(kg)\" style=\"width: 80%;\"/><br />\r\n      `,\r\n        icon: 'success',\r\n        showCancelButton: true,\r\n        cancelButtonColor: 'grey',\r\n        confirmButtonText: 'Submit!',\r\n        confirmButtonColor: 'green',\r\n        allowOutsideClick: false,\r\n        preConfirm: () => ({\r\n          invoice_number: document.getElementById('invoice_number').value,\r\n          number_of_box: document.getElementById('number_of_box').value,\r\n          total_weight: document.getElementById('total_weight').value,\r\n\r\n        })\r\n      });\r\n      let v = swalval && swalval.value || swalval.dismiss;\r\n      // if (v && v.order_status || v === 'cancel') {\r\n      if (v.invoice_number === '' || v.number_of_box === '' || v.total_weight === '') {\r\n        await Swal.fire({ type: 'error', title: 'All Fields is required!' });\r\n        resetPw();\r\n      } else if (v !== 'cancel') {\r\n        if (swalval.isConfirmed) {\r\n          try {\r\n            axios.get('/sanctum/csrf-cookie').then(response => {\r\n              axios.post('/api/client/update-sale-order-status', {\r\n                'row_id': row_id,\r\n                'invoice_number': swalval.value.invoice_number,\r\n                'number_of_box': swalval.value.number_of_box,\r\n                'total_weight': swalval.value.total_weight,\r\n                'order_status': 'ready_to_ship',\r\n              })\r\n                .then(response => {\r\n                  if (response.data.response_code === 200) {\r\n                    var reData = response.data.data;\r\n                    setTableData(tableData.map(item =>\r\n                      item.id === row_id\r\n                        ? reData\r\n                        : item\r\n                    ));\r\n                    swal({\r\n                      title: 'Done!',\r\n                      text: response.data.message,\r\n                      icon: 'success'\r\n                    })\r\n                  } else if (response.data.response_code === 412) {\r\n                    swal({\r\n                      title: \"Errors!\",\r\n                      text: response.data.message,\r\n                      icon: \"error\",\r\n                    });\r\n                  } else {\r\n                    swal({\r\n                      title: \"Errors!\",\r\n                      text: response.data.message,\r\n                      icon: \"error\",\r\n                    });\r\n                  }\r\n                  setLoading(false);\r\n                })\r\n                .catch(function (error) {\r\n                  setLoading(false);\r\n                  console.error(error);\r\n                });\r\n            });\r\n          } catch (e) {\r\n            setLoading(false);\r\n          }\r\n        }\r\n      }\r\n      // } else {\r\n      //   await Swal.fire({ icon: 'error', title: 'All Fields is required!' });\r\n      //   resetPw();\r\n      // }\r\n    }\r\n    resetPw();\r\n  }\r\n  const __handleAcceptOrder = (row_id, order_id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You want to accept this \\\"\" + order_id + \"\\\" order!\",\r\n      icon: \"warning\",\r\n      buttons: [\r\n        'No, cancel it!',\r\n        'Yes, I am sure!'\r\n      ],\r\n      dangerMode: true,\r\n    }).then(function (isConfirm) {\r\n      if (isConfirm) {\r\n        try {\r\n          axios.get('/sanctum/csrf-cookie').then(response => {\r\n            axios.post('/api/client/update-sale-order-status', {\r\n              'row_id': row_id,\r\n              'order_status': 'processing',\r\n            })\r\n              .then(response => {\r\n                if (response.data.response_code === 200) {\r\n                  var reData = response.data.data;\r\n                  setTableData(tableData.map(item =>\r\n                    item.id === row_id\r\n                      ? reData\r\n                      : item\r\n                  ));\r\n                  swal({\r\n                    title: 'Done!',\r\n                    text: 'Order accepted successfully.',\r\n                    icon: 'success'\r\n                  })\r\n                } else if (response.data.response_code === 412) {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                } else {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                }\r\n                setLoading(false);\r\n              })\r\n              .catch(function (error) {\r\n                setLoading(false);\r\n                console.error(error);\r\n              });\r\n          });\r\n        } catch (e) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const __handleOrderShipped = (row_id, order_id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You want to shipped this \\\"\" + order_id + \"\\\" order!\",\r\n      icon: \"warning\",\r\n      buttons: [\r\n        'No, cancel it!',\r\n        'Yes, I am sure!'\r\n      ],\r\n      dangerMode: true,\r\n    }).then(function (isConfirm) {\r\n      if (isConfirm) {\r\n        try {\r\n          axios.get('/sanctum/csrf-cookie').then(response => {\r\n            axios.post('/api/client/update-sale-order-status', {\r\n              'row_id': row_id,\r\n              'order_status': 'shipped',\r\n            })\r\n              .then(response => {\r\n                if (response.data.response_code === 200) {\r\n                  var reData = response.data.data;\r\n                  setTableData(tableData.map(item =>\r\n                    item.id === row_id\r\n                      ? reData\r\n                      : item\r\n                  ));\r\n                  swal({\r\n                    title: 'Done!',\r\n                    text: 'Order shipped successfully.',\r\n                    icon: 'success'\r\n                  })\r\n                } else if (response.data.response_code === 412) {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                } else {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                }\r\n                setLoading(false);\r\n              })\r\n              .catch(function (error) {\r\n                setLoading(false);\r\n                console.error(error);\r\n              });\r\n          });\r\n        } catch (e) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const __handleAcceptReturn = (row_id, order_id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You want to accept return of \\\"\" + order_id + \"\\\" order!\",\r\n      icon: \"warning\",\r\n      buttons: [\r\n        'No, cancel it!',\r\n        'Yes, I am sure!'\r\n      ],\r\n      dangerMode: true,\r\n    }).then(function (isConfirm) {\r\n      if (isConfirm) {\r\n        try {\r\n          axios.get('/sanctum/csrf-cookie').then(response => {\r\n            axios.post('/api/client/update-sale-order-status', {\r\n              'row_id': row_id,\r\n              'order_status': 'return_initiated',\r\n            })\r\n              .then(response => {\r\n                if (response.data.response_code === 200) {\r\n                  var reData = response.data.data;\r\n                  setTableData(tableData.map(item =>\r\n                    item.id === row_id\r\n                      ? reData\r\n                      : item\r\n                  ));\r\n                  swal({\r\n                    title: 'Done!',\r\n                    text: 'Order return accepted successfully.',\r\n                    icon: 'success'\r\n                  })\r\n                } else if (response.data.response_code === 412) {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                } else {\r\n                  swal({\r\n                    title: \"Errors!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\",\r\n                  });\r\n                }\r\n                setLoading(false);\r\n              })\r\n              .catch(function (error) {\r\n                setLoading(false);\r\n                console.error(error);\r\n              });\r\n          });\r\n        } catch (e) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"Sales\" }]} />\r\n        </Box>\r\n        <Card title=\"Sales\">\r\n          <CardHeader\r\n            title=\"Sales\"\r\n            titleTypographyProps={{\r\n              variant: \"h4\",\r\n              fontSize: '16px',\r\n              fontWeight: '600',\r\n              textTransform: 'uppercase',\r\n              textAlign: 'center'\r\n            }}\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <StyledTable sx={{ minWidth: 1000 }}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\" sx={{ width: '60px' }}>Sr. No.</TableCell>\r\n                    <TableCell align=\"center\">Order Id</TableCell>\r\n                    <TableCell align=\"center\">Total MRP</TableCell>\r\n                    <TableCell align=\"center\">Total Saving</TableCell>\r\n                    <TableCell align=\"center\">Total Payable</TableCell>\r\n                    <TableCell align=\"center\">Order Date</TableCell>\r\n                    <TableCell align=\"center\">Transaction Id</TableCell>\r\n                    <TableCell align=\"center\">Payment Status</TableCell>\r\n                    <TableCell align=\"center\">Status</TableCell>\r\n                    <TableCell align=\"center\" sx={{ width: '230px' }}>Action</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tableData ? tableData\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link to={`/dashboard/order-history/sale-details/${row.id}`}>\r\n                            {row.hash_order_id}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{row.total_mrp}</TableCell>\r\n                        <TableCell align=\"center\">{row.total_savings}</TableCell>\r\n                        <TableCell align=\"center\">{row.total_payable}</TableCell>\r\n                        <TableCell align=\"center\">{Moment(row.created_at).format('DD/MM/YYYY')}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {row.transaction_id ? (\r\n                            <>\r\n                              <Small bgcolor={bgSuccessLight}>{row.transaction_id}</Small>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              -\r\n                            </>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {(() => {\r\n                            switch (row.payment_status) {\r\n                              case 'success':\r\n                                return <Small bgcolor={bgSuccess}>Success</Small>\r\n                              case 'pending':\r\n                                return <Small bgcolor={bgSecondary}>Pending</Small>\r\n                              case 'failed':\r\n                                return <Small bgcolor={bgError}>Failed</Small>\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {(() => {\r\n                            switch (row.status) {\r\n                              case 'pending':\r\n                                return <Small bgcolor={bgSecondary}>Pending</Small>\r\n                              case 'failed':\r\n                                return <Small bgcolor={bgError}>Failed</Small>\r\n                              case 'cancelled':\r\n                                return <Small bgcolor={bgError}>Cancelled</Small>\r\n                              case 'completed':\r\n                                return <Small bgcolor={bgPrimary}>Completed</Small>\r\n                              case 'processing':\r\n                                return <Small bgcolor={bgSuccessLight}>Processing</Small>\r\n                              case 'ready_to_ship':\r\n                                return <Small bgcolor={bgSuccessLight}>Ready To Ship</Small>\r\n                              case 'shipped':\r\n                                return <Small bgcolor={bgSuccessLight}>Shipped</Small>\r\n                              case 'delivered':\r\n                                return <Small bgcolor={bgSuccess}>Delivered</Small>\r\n                              case 'return':\r\n                                return <Small bgcolor={bgSecondaryDark}>Return</Small>\r\n                              case 'return_initiated':\r\n                                return <Small bgcolor={bgSecondaryDark}>Return Initiated</Small>\r\n                              case 'refund':\r\n                                return <Small bgcolor={bgError}>Refunded</Small>\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                        </TableCell>\r\n                        <TableCell title=\"View\" align=\"right\" sx={{ width: '200px' }}>\r\n                          {(() => {\r\n                            switch (row.status) {\r\n                              case 'pending':\r\n                                return null\r\n                              case 'failed':\r\n                                return null\r\n                              case 'cancelled':\r\n                                return null\r\n                              case 'completed':\r\n                                return <Button onClick={(e) => __handleAcceptOrder(row.id, row.hash_order_id)}\r\n                                  color=\"success\" variant=\"contained\" size=\"small\" sx={{ m: .5 }}>\r\n                                  Accept\r\n                                </Button>\r\n                              case 'processing':\r\n                                return <Button title=\"Ready To Ship\" onClick={(e) => __handleReadyToShip(row.id, row.hash_order_id)}\r\n                                  color=\"primary\" variant=\"contained\" size=\"small\" sx={{ m: .5 }}>\r\n                                  Ready To Ship\r\n                                </Button>\r\n                              case 'ready_to_ship':\r\n                                return <Button title=\"Ready To Ship\" onClick={(e) => __handleOrderShipped(row.id, row.hash_order_id)}\r\n                                  color=\"primary\" variant=\"contained\" size=\"small\" sx={{ m: .5 }}>\r\n                                  Shipped\r\n                                </Button>\r\n                              case 'shipped':\r\n                                return null\r\n                              case 'delivered':\r\n                                return null\r\n                              case 'return':\r\n                                return <Button title=\"Ready To Ship\" onClick={(e) => __handleAcceptReturn(row.id, row.hash_order_id)}\r\n                                  color=\"primary\" variant=\"contained\" size=\"small\" sx={{ m: .5 }}>\r\n                                  Accept Return\r\n                                </Button>\r\n                              case 'refund':\r\n                                return null\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                          <Button component={Link}\r\n                            to={`/dashboard/order-history/sale-details/${row.id}`}\r\n                            color=\"primary\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                            View\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )) : <TableRow><TableCell align=\"center\" colSpan={10}><CircularProgress /></TableCell></TableRow>}\r\n                </TableBody>\r\n              </StyledTable>\r\n              {tableData ?\r\n                <TablePagination\r\n                  sx={{ px: 2 }}\r\n                  page={page}\r\n                  component=\"div\"\r\n                  rowsPerPage={rowsPerPage}\r\n                  count={tableData.length}\r\n                  onPageChange={handleChangePage}\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                  backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n                />\r\n                : <>\r\n\r\n                </>\r\n              }\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Container >\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default PurchaseList;\r\n"],"sourceRoot":""}