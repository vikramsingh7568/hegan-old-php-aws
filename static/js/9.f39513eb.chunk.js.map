{"version":3,"sources":["app/views/dashboard/analytics/manufacturer/MDashStatCard.js","app/views/dashboard/analytics/seller/SDashStatCard.js","app/views/dashboard/Analytics.jsx","app/views/dashboard/analytics/retailer/RDashStatCard.js"],"names":["StyledCard","styled","Card","theme","display","flexWrap","alignItems","justifyContent","padding","background","palette","paper","breakpoints","down","ContentBox","Box","color","text","secondary","opacity","fontSize","primary","main","Heading","margin","marginTop","fontWeight","MDashStatCard","useState","setLoading","name","amount","icon","cardList","setCardList","useEffect","fetchData","axios","get","then","response","post","data","response_code","catch","error","console","Grid","container","spacing","style","item","lg","md","sm","xs","sx","mb","map","index","elevation","ml","Icon","className","SDashStatCard","marginRight","textTransform","marginBottom","Analytics","useTheme","register_as","localStorage","getItem","log"],"mappings":"mQAOMA,EAAaC,YAAOC,IAAPD,EAAa,gBAAGE,EAAK,EAALA,MAAK,oBACtCC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,kBACTC,WAAYN,EAAMO,QAAQD,WAAWE,OACpCR,EAAMS,YAAYC,KAAK,MAAQ,CAAEL,QAAS,uBAGvCM,EAAab,YAAOc,IAAPd,EAAY,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CAC7CC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZ,UAAW,CAAEU,MAAOb,EAAMO,QAAQO,KAAKC,WACvC,UAAW,CAAEC,QAAS,GAAKC,SAAU,OAAQJ,MAAOb,EAAMO,QAAQW,QAAQC,UAGtEC,EAAUtB,YAAO,KAAPA,EAAa,YAAQ,MAAQ,CAC3CuB,OAAQ,EACRC,UAAW,MACXL,SAAU,OACVM,WAAY,MACZV,MALmC,EAALb,MAKjBO,QAAQW,QAAQC,SAqEhBK,EAlEO,WAEpB,MAA8BC,oBAAS,GAAM,mBAA7BC,GAAF,KAAY,MAC1B,EAAgCD,mBAAS,CACvC,CAAEE,KAAM,iBAAkBC,OAAQ,EAAGC,KAAM,cAC3C,CAAEF,KAAM,eAAgBC,OAAQ,IAAKC,KAAM,SAC3C,CAAEF,KAAM,kBAAmBC,OAAQ,IAAKC,KAAM,aAC9C,CAAEF,KAAM,kBAAmBC,OAAQ,IAAKC,KAAM,mBAC9C,mBALKC,EAAQ,KAAEC,EAAW,KAM5BC,qBAAU,WACRC,MACC,IAKH,IAAMA,EAAS,iDAAG,wFACC,OAAjBP,GAAW,GAAM,kBAETQ,IAAMC,IAAI,wBAAwBC,MAAK,SAAAC,GAC3CH,IAAMI,KAAK,sCACRF,MAAK,SAAAC,GACgC,MAAhCA,EAASE,KAAKC,cAChBT,EAAYM,EAASE,KAAKA,MACjBF,EAASE,KAAKC,cAGzBd,GAAW,MAEZe,OAAM,SAAUC,GACfhB,GAAW,GACXiB,QAAQD,MAAMA,SAEjB,KAAD,iDAEFhB,GAAW,GAAO,wDAErB,kBArBc,mCAsBf,OACE,cAACkB,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,MAAO,CAAEzB,UAAW,OAAQ,SACtD,cAACsB,EAAA,EAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,SACxC,cAACR,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGO,GAAI,CAAEC,GAAI,QAAS,SAC5CxB,EAASyB,KAAI,SAACP,EAAMQ,GAAK,OACxB,cAACZ,EAAA,EAAI,CAACI,MAAI,EAACI,GAAI,GAAIF,GAAI,EAAE,SACvB,eAACrD,EAAU,CAAC4D,UAAW,EAAE,UACvB,cAAC9C,EAAU,UACT,eAACC,EAAA,EAAG,CAAC8C,GAAG,OAAM,UACZ,cAAC,IAAK,UAAEV,EAAKrB,OACb,cAACP,EAAO,UAAE4B,EAAKpB,cAGnB,cAACjB,EAAU,UACT,cAACC,EAAA,EAAG,CAAC8C,GAAG,OAAM,SACZ,cAACC,EAAA,EAAI,CAACC,UAAU,OAAM,SAAEZ,EAAKnB,eAVN2B,aCrErC3D,EAAaC,YAAOC,IAAPD,EAAa,gBAAGE,EAAK,EAALA,MAAK,oBACtCC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,kBACTC,WAAYN,EAAMO,QAAQD,WAAWE,OACpCR,EAAMS,YAAYC,KAAK,MAAQ,CAAEL,QAAS,uBAGvCM,EAAab,YAAOc,IAAPd,EAAY,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CAC7CC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZ,UAAW,CAAEU,MAAOb,EAAMO,QAAQO,KAAKC,WACvC,UAAW,CAAEC,QAAS,GAAKC,SAAU,OAAQJ,MAAOb,EAAMO,QAAQW,QAAQC,UAGtEC,EAAUtB,YAAO,KAAPA,EAAa,YAAQ,MAAQ,CAC3CuB,OAAQ,EACRC,UAAW,MACXL,SAAU,OACVM,WAAY,MACZV,MALmC,EAALb,MAKjBO,QAAQW,QAAQC,SAqEhB0C,EAlEO,WAEpB,MAA8BpC,oBAAS,GAAM,mBAA7BC,GAAF,KAAY,MAC1B,EAAgCD,mBAAS,CACvC,CAAEE,KAAM,iBAAkBC,OAAQ,EAAGC,KAAM,cAC3C,CAAEF,KAAM,eAAgBC,OAAQ,IAAKC,KAAM,SAC3C,CAAEF,KAAM,kBAAmBC,OAAQ,IAAKC,KAAM,aAC9C,CAAEF,KAAM,kBAAmBC,OAAQ,IAAKC,KAAM,mBAC9C,mBALKC,EAAQ,KAAEC,EAAW,KAM5BC,qBAAU,WACRC,MACC,IAKH,IAAMA,EAAS,iDAAG,wFACC,OAAjBP,GAAW,GAAM,kBAETQ,IAAMC,IAAI,wBAAwBC,MAAK,SAAAC,GAC3CH,IAAMI,KAAK,sCACRF,MAAK,SAAAC,GACgC,MAAhCA,EAASE,KAAKC,cAChBT,EAAYM,EAASE,KAAKA,MACjBF,EAASE,KAAKC,cAGzBd,GAAW,MAEZe,OAAM,SAAUC,GACfhB,GAAW,GACXiB,QAAQD,MAAMA,SAEjB,KAAD,iDAEFhB,GAAW,GAAO,wDAErB,kBArBc,mCAsBf,OACE,cAACkB,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,MAAO,CAAEzB,UAAW,OAAQ,SACtD,cAACsB,EAAA,EAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,SACxC,cAACR,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGO,GAAI,CAAEC,GAAI,QAAS,SAC5CxB,EAASyB,KAAI,SAACP,EAAMQ,GAAK,OACxB,cAACZ,EAAA,EAAI,CAACI,MAAI,EAACI,GAAI,GAAIF,GAAI,EAAE,SACvB,eAAC,EAAU,CAACO,UAAW,EAAE,UACvB,cAAC,EAAU,UACT,eAAC7C,EAAA,EAAG,CAAC8C,GAAG,OAAM,UACZ,cAAC,IAAK,UAAEV,EAAKrB,OACb,cAAC,EAAO,UAAEqB,EAAKpB,cAGnB,cAAC,EAAU,UACT,cAAChB,EAAA,EAAG,CAAC8C,GAAG,OAAM,SACZ,cAACC,EAAA,EAAI,CAACC,UAAU,OAAM,SAAEZ,EAAKnB,eAVN2B,aChErC7C,GCLab,YAAOC,IAAPD,EAAa,gBAAGE,EAAK,EAALA,MAAK,oBACtCC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,kBACTC,WAAYN,EAAMO,QAAQD,WAAWE,OACpCR,EAAMS,YAAYC,KAAK,MAAQ,CAAEL,QAAS,uBAG1BP,YAAOc,IAAPd,EAAY,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CAC7CC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZ,UAAW,CAAEU,MAAOb,EAAMO,QAAQO,KAAKC,WACvC,UAAW,CAAEC,QAAS,GAAKC,SAAU,OAAQJ,MAAOb,EAAMO,QAAQW,QAAQC,UAG5DrB,YAAO,KAAPA,EAAa,YAAQ,MAAQ,CAC3CuB,OAAQ,EACRC,UAAW,MACXL,SAAU,OACVM,WAAY,MACZV,MALmC,EAALb,MAKjBO,QAAQW,QAAQC,SDlBZrB,YAAO,MAAPA,EAAc,gBAAGE,EAAK,EAALA,MAAK,oBACvCqB,OAAQ,QACPrB,EAAMS,YAAYC,KAAK,MAAQ,CAAEW,OAAQ,aAG9BvB,YAAO,OAAPA,EAAe,iBAAO,CAClCmB,SAAU,OACVM,WAAY,MACZuC,YAAa,QACbC,cAAe,iBAGAjE,YAAO,OAAPA,EAAe,YAAQ,MAAQ,CAC9CmB,SAAU,WACVJ,MAFsC,EAALb,MAEpBO,QAAQO,KAAKC,cAGjBjB,YAAO,KAAPA,EAAa,YAAQ,MAAQ,CACtCmB,SAAU,OACVM,WAAY,MACZyC,aAAc,OACdD,cAAe,aACflD,MAL8B,EAALb,MAKZO,QAAQO,KAAKC,cA8DbkD,UA3DG,WACIC,cAAZ3D,QAAR,IACM4D,EAAaC,aAAaC,QAAQ,eAExC,OADA1B,QAAQ2B,IAAI,iBAAiBH,GAE3B,cAAC,WAAQ,UACP,cAAC,EAAU,CAACP,UAAU,YAAW,SAC/B,WACA,OAAQO,GACN,IAAK,IACH,OAAQ,mCACN,cAAC,EAAa,MAElB,IAAK,IAIL,IAAK,IACH,OAAQ,mCACN,cAAC,EAAa,OAZpB","file":"static/js/9.f39513eb.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\nimport axios from 'axios';\r\n\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst MDashStatCard = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [cardList, setCardList] = useState([\r\n    { name: 'Total Medicine', amount: 0, icon: 'assessment' },\r\n    { name: 'Out of Stock', amount: '0', icon: 'group' },\r\n    { name: 'Available Stock', amount: '0', icon: 'inventory' },\r\n    { name: 'Expire Medicine', amount: '0', icon: 'shopping_cart' },\r\n  ]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n    * Fetching data from server.\r\n    */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/client/get-seller-stock-cards')\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setCardList(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  return (\r\n    <Grid container spacing={3} style={{ marginTop: '0px' }}>\r\n      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n        <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n          {cardList.map((item, index) => (\r\n            <Grid item xs={12} md={3} key={index}>\r\n              <StyledCard elevation={6}>\r\n                <ContentBox>\r\n                  <Box ml=\"12px\">\r\n                    <Small>{item.name}</Small>\r\n                    <Heading>{item.amount}</Heading>\r\n                  </Box>\r\n                </ContentBox>\r\n                <ContentBox>\r\n                  <Box ml=\"12px\">\r\n                    <Icon className=\"icon\">{item.icon}</Icon>\r\n                  </Box>\r\n                </ContentBox>\r\n              </StyledCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n};\r\n\r\nexport default MDashStatCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\nimport axios from 'axios';\r\n\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst SDashStatCard = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [cardList, setCardList] = useState([\r\n    { name: 'Total Medicine', amount: 0, icon: 'assessment' },\r\n    { name: 'Out of Stock', amount: '0', icon: 'group' },\r\n    { name: 'Available Stock', amount: '0', icon: 'inventory' },\r\n    { name: 'Expire Medicine', amount: '0', icon: 'shopping_cart' },\r\n  ]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n    * Fetching data from server.\r\n    */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/client/get-seller-stock-cards')\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setCardList(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  return (\r\n    <Grid container spacing={3} style={{ marginTop: '0px' }}>\r\n      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n        <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n          {cardList.map((item, index) => (\r\n            <Grid item xs={12} md={3} key={index}>\r\n              <StyledCard elevation={6}>\r\n                <ContentBox>\r\n                  <Box ml=\"12px\">\r\n                    <Small>{item.name}</Small>\r\n                    <Heading>{item.amount}</Heading>\r\n                  </Box>\r\n                </ContentBox>\r\n                <ContentBox>\r\n                  <Box ml=\"12px\">\r\n                    <Icon className=\"icon\">{item.icon}</Icon>\r\n                  </Box>\r\n                </ContentBox>\r\n              </StyledCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n};\r\n\r\nexport default SDashStatCard;\r\n","import { Card, Grid, styled, useTheme } from '@mui/material';\nimport { Fragment } from 'react';\n\n// Manufacturer  M\nimport MDashStatCard from './analytics/manufacturer/MDashStatCard';\n\n// Saler W,D\nimport SDashStatCard from './analytics/seller/SDashStatCard';\n\n// Retailer R,H\nimport RDashStatCard from './analytics/retailer/RDashStatCard';\n\nconst ContentBox = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n}));\n\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginRight: '.5rem',\n  textTransform: 'capitalize',\n}));\n\nconst SubTitle = styled('span')(({ theme }) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n}));\n\nconst H4 = styled('h4')(({ theme }) => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginBottom: '16px',\n  textTransform: 'capitalize',\n  color: theme.palette.text.secondary,\n}));\n\nconst Analytics = () => {\n  const { palette } = useTheme();\n  const register_as =localStorage.getItem('register_as');\n  console.log('register_as:  '+register_as);\n  return (\n    <Fragment>\n      <ContentBox className=\"analytics\">\n      {(() => {\n        switch (register_as) {\n          case 'M':\n            return (<>\n              <MDashStatCard />\n            </>)\n          case 'D':\n            return (<>\n              <SDashStatCard />\n            </>)\n          case 'W':\n            return (<>\n              <SDashStatCard />\n            </>)\n          return (<>\n              <RDashStatCard />\n          </>)\n        }\n      })()}\n        {/* <Grid container spacing={3} style={{marginTop :'0px'}}>\n          <Grid item lg={12} md={12} sm={12} xs={12}>\n            \n          </Grid>\n           <Grid item lg={8} md={8} sm={12} xs={12}>\n            <StatCards />\n            <TopSellingTable />\n            <StatCards2 />\n\n            <H4>Ongoing Projects</H4>\n            <RowCards />\n          </Grid>\n\n          <Grid item lg={4} md={4} sm={12} xs={12}>\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\n              <Title>Traffic Sources</Title>\n              <SubTitle>Last 30 days</SubTitle>\n\n              <DoughnutChart\n                height=\"300px\"\n                color={[palette.primary.dark, palette.primary.main, palette.primary.light]}\n              />\n            </Card>\n\n            <UpgradeCard />\n            <Campaigns />\n          </Grid>\n        </Grid> */}\n      </ContentBox>\n    </Fragment>\n  );\n};\n\nexport default Analytics;\n","import { useState, useEffect } from 'react';\r\n\r\nimport { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\nimport axios from 'axios';\r\n\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst RDashStatCard = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [cardList, setCardList] = useState([\r\n    { name: 'Total Medicine', amount: 0, icon: 'assessment' },\r\n    { name: 'Out of Stock', amount: '0', icon: 'group' },\r\n    { name: 'Available Stock', amount: '0', icon: 'inventory' },\r\n    { name: 'Expire Medicine', amount: '0', icon: 'shopping_cart' },\r\n  ]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n    * Fetching data from server.\r\n    */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/client/get-seller-stock-cards')\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setCardList(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  return (\r\n    <Grid container spacing={3} style={{ marginTop: '0px' }}>\r\n      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n        <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n          {cardList.map((item, index) => (\r\n            <Grid item xs={12} md={3} key={index}>\r\n              <StyledCard elevation={6}>\r\n                <ContentBox>\r\n                  <Box ml=\"12px\">\r\n                    <Small>{item.name}</Small>\r\n                    <Heading>{item.amount}</Heading>\r\n                  </Box>\r\n                </ContentBox>\r\n                <ContentBox>\r\n                  <Box ml=\"12px\">\r\n                    <Icon className=\"icon\">{item.icon}</Icon>\r\n                  </Box>\r\n                </ContentBox>\r\n              </StyledCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n\r\n  );\r\n};\r\n\r\nexport default RDashStatCard;\r\n"],"sourceRoot":""}