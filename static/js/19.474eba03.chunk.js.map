{"version":3,"sources":["app/views/dashboard/Seller/OrderHistory/ViewPurchaseDetails.js"],"names":["Item","styled","theme","marginBottom","fontSize","fontWeight","color","ItemContent","Container","margin","breakpoints","down","ContentBox","Box","height","padding","position","Small","Yup","shape","status","required","width","borderRadius","overflow","background","bgcolor","boxShadow","cursor","ViewPurchaseDetails","palette","useTheme","bgError","error","main","bgPrimary","primary","bgSecondary","secondary","bgSuccess","success","bgSuccessLight","light","bgSecondaryDark","dark","row_id","useParams","useNavigate","useState","order","setOrder","setLoading","useEffect","fetchData","axios","get","then","response","post","data","response_code","catch","console","className","routeSegments","name","path","title","titleTypographyProps","variant","action","component","Link","to","size","sx","m","container","item","sm","xs","lg","order_id","transaction_id","payment_status","process","total_mrp","additional_discount","delivery_charges","total_savings","total_payable","Moment","created_at","format","style","align","order_items","map","row","index","product_name","href","id","src","product_image","alt","brand_name","seller_name","unit_packing","quantity","min_qty_net_rate","min_qty","float","border","colSpan"],"mappings":"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","file":"static/js/19.474eba03.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { Breadcrumb } from \"app/components\";\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport {\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  CardHeader,\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  styled,\r\n  useTheme,\r\n  Table, TableHead, TableRow, TableCell, TableBody\r\n} from \"@mui/material\";\r\nimport Moment from 'moment';\r\n\r\nconst Item = styled(\"div\")(({ theme }) => (\r\n  {\r\n    marginBottom: \"5px\",\r\n    fontSize: '16px',\r\n    fontWeight: '400',\r\n    color: '#484747'\r\n  }\r\n));\r\nconst ItemContent = styled(\"div\")(({ theme }) => (\r\n  {\r\n    marginBottom: \"15px\",\r\n    fontSize: '16px',\r\n    fontWeight: '600',\r\n  }\r\n));\r\n\r\nconst Container = styled(\"div\")(({ theme }) => (\r\n  {\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n      marginBottom: \"30px\",\r\n      [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n  }\r\n));\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  padding: '32px',\r\n  position: 'relative',\r\n  // background: 'rgba(0, 0, 0, 0.01)',\r\n}));\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  status: Yup.string()\r\n    .required('User Accton is required!'),\r\n});\r\n\r\nconst Small = styled('small')(({ bgcolor }) => ({\r\n  width: 50,\r\n  height: 15,\r\n  color: '#fff',\r\n  padding: '5px 8px',\r\n  borderRadius: '4px',\r\n  overflow: 'hidden',\r\n  background: bgcolor,\r\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n  cursor: 'pointer'\r\n}));\r\n\r\nconst ViewPurchaseDetails = () => {\r\n  const { palette } = useTheme();\r\n  const bgError = palette.error.main;\r\n  const bgPrimary = palette.primary.main;\r\n  const bgSecondary = palette.secondary.main;\r\n  const bgSuccess = palette.success.main;\r\n  const bgSuccessLight = palette.success.light;\r\n  const bgSecondaryDark = palette.secondary.dark;\r\n\r\n  const { row_id } = useParams();\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [order, setOrder] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetching data from server.\r\n   */\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.get('/sanctum/csrf-cookie').then(response => {\r\n        axios.post('/api/client/get-purchase-order-details', {\r\n          row_id: row_id\r\n        })\r\n          .then(response => {\r\n            if (response.data.response_code === 200) {\r\n              setOrder(response.data.data);\r\n            } else if (response.data.response_code === 401) {\r\n\r\n            } else {\r\n\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(function (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n          });\r\n      });\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Box className=\"breadcrumb\">\r\n          <Breadcrumb routeSegments={[{ name: \"dashboard\", path: \"/dashboard\" }, { name: \"Purchase Details\" }]} />\r\n        </Box>\r\n\r\n        <Card title=\"Purchase Details\">\r\n          <ContentBox>\r\n            <CardHeader\r\n              title=\"Purchase Details\"\r\n              titleTypographyProps={{\r\n                variant: \"h4\",\r\n                fontSize: '18px',\r\n                fontWeight: '600',\r\n                // textTransform: 'uppercase',\r\n                color: theme.palette.primary.main,\r\n\r\n              }}\r\n              action={\r\n                <>\r\n                  <Button title=\"Back\" component={Link}\r\n                    to={`/dashboard/order-history/purchase/record`}\r\n                    color=\"inherit\" variant=\"outlined\" size=\"small\" sx={{ m: .5 }}>\r\n                    Back\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n              <Box width=\"100%\" overflow=\"auto\">\r\n                {order && (\r\n                  <>\r\n                    <Grid container>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Order Id</Item>\r\n                        <ItemContent>{order.order_id}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Transaction Id</Item>\r\n                        <ItemContent>{order.transaction_id}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Payment Status</Item>\r\n                        <ItemContent>\r\n                          {(() => {\r\n                            switch (order.payment_status) {\r\n                              case 'success':\r\n                                return <Small bgcolor={bgSuccess}>Success</Small>\r\n                              case 'pending':\r\n                                return <Small bgcolor={bgSecondary}>Pending</Small>\r\n                              case 'failed':\r\n                                return <Small bgcolor={bgError}>Failed</Small>\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                        </ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Order Status</Item>\r\n                        <ItemContent>\r\n                          {(() => {\r\n                            switch (order.status) {\r\n                              case 'pending':\r\n                                return <Small bgcolor={bgSecondary}>Pending</Small>\r\n                              case 'failed':\r\n                                return <Small bgcolor={bgError}>Failed</Small>\r\n                              case 'cancelled':\r\n                                return <Small bgcolor={bgError}>Cancelled</Small>\r\n                              case 'completed':\r\n                                return <Small bgcolor={bgPrimary}>Completed</Small>\r\n                              case 'processing':\r\n                                return <Small bgcolor={bgSuccessLight}>Processing</Small>\r\n                              case 'ready_to_ship':\r\n                                return <Small bgcolor={bgSuccessLight}>Ready To Ship</Small>\r\n                              case 'shipped':\r\n                                return <Small bgcolor={bgSuccessLight}>Shipped</Small>\r\n                              case 'delivered':\r\n                                return <Small bgcolor={bgSuccess}>Delivered</Small>\r\n                              case 'return':\r\n                                return <Small bgcolor={bgSecondaryDark}>Return</Small>\r\n                              case 'refund':\r\n                                return <Small bgcolor={bgSecondaryDark}>Refund</Small>\r\n                              default:\r\n                                return null\r\n                            }\r\n                          })()}\r\n                        </ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Total MRP</Item>\r\n                        <ItemContent>{process.env.REACT_APP_CURRENCY} {order.total_mrp}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Additional Discount</Item>\r\n                        <ItemContent>{process.env.REACT_APP_CURRENCY} {order.additional_discount}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Delivery Charges</Item>\r\n                        <ItemContent>{process.env.REACT_APP_CURRENCY} {order.delivery_charges}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Total Saving</Item>\r\n                        <ItemContent>{process.env.REACT_APP_CURRENCY} {order.total_savings}</ItemContent>\r\n                      </Grid>\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Total Payable</Item>\r\n                        <ItemContent><Small bgcolor={bgSuccess}>{process.env.REACT_APP_CURRENCY} {order.total_payable}</Small></ItemContent>\r\n                      </Grid>\r\n\r\n                      <Grid item sm={6} xs={12} lg={3}>\r\n                        <Item>Order Date</Item>\r\n                        <ItemContent>{Moment(order.created_at).format('DD/MM/YYYY')}</ItemContent>\r\n                      </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <br />\r\n                    <br />\r\n                    <Divider />\r\n\r\n                    <br />\r\n                    <br />\r\n                    <h4 style={{ color: theme.palette.primary.main, fontSize: '18px', }}>Order Summary</h4>\r\n                    <Grid container>\r\n                      <Grid item sm={12} xs={12} lg={12}>\r\n                        <Box overflow=\"auto\">\r\n                          <Table>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell align=\"center\">Product </TableCell>\r\n                                <TableCell align=\"center\">Manufacturar</TableCell>\r\n                                <TableCell align=\"center\">Seller</TableCell>\r\n                                <TableCell align=\"center\">Unit Packing</TableCell>\r\n                                <TableCell align=\"center\">Quantity</TableCell>\r\n                                <TableCell align=\"center\">Rate</TableCell>\r\n                                <TableCell align=\"center\">Total MRP</TableCell>\r\n                                <TableCell align=\"center\">Total</TableCell>\r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {order.order_items && (\r\n                                order.order_items.map((row, index) => (\r\n                                  <>\r\n                                    <TableRow key={'order-summary-' + index}>\r\n                                      <TableCell align=\"center\">\r\n                                        <a className=\"hover_effect1\" title={row.product_name} href={`/product/details/${row.id}`}>\r\n                                          <img className='os-list-img'\r\n                                            src={row.product_image}\r\n                                            alt={row.product_name}\r\n                                          />\r\n                                        </a>\r\n                                        <br />\r\n                                        <strong>{row.product_name}</strong>\r\n                                      </TableCell>\r\n                                      <TableCell align=\"center\">{row.brand_name}</TableCell>\r\n                                      <TableCell align=\"center\">{row.seller_name}</TableCell>\r\n                                      <TableCell align=\"center\">{row.unit_packing}</TableCell>\r\n                                      <TableCell align=\"center\">{row.quantity}</TableCell>\r\n                                      <TableCell align=\"center\">{row.min_qty_net_rate} / {row.min_qty} items</TableCell>\r\n                                      <TableCell align=\"center\">{process.env.REACT_APP_CURRENCY} {row.total_mrp}</TableCell>\r\n                                      <TableCell align=\"center\">{process.env.REACT_APP_CURRENCY} {row.total_payable}</TableCell>\r\n                                      <TableCell align=\"center\">\r\n                                        {(() => {\r\n                                          switch (row.status) {\r\n                                            case 'pending':\r\n                                              return <Small bgcolor={bgSecondary}>Pending</Small>\r\n                                            case 'failed':\r\n                                              return <Small bgcolor={bgError}>Failed</Small>\r\n                                            case 'cancelled':\r\n                                              return <Small bgcolor={bgError}>Cancelled</Small>\r\n                                            case 'completed':\r\n                                              return <Small bgcolor={bgPrimary}>Completed</Small>\r\n                                            case 'processing':\r\n                                              return <Small bgcolor={bgSuccessLight}>Processing</Small>\r\n                                            case 'ready_to_ship':\r\n                                              return <Small bgcolor={bgSuccessLight}>Ready To Ship</Small>\r\n                                            case 'shipped':\r\n                                              return <Small bgcolor={bgSuccessLight}>Shipped</Small>\r\n                                            case 'delivered':\r\n                                              return <Small bgcolor={bgSuccess}>Delivered</Small>\r\n                                            case 'return':\r\n                                              return <Small bgcolor={bgSecondaryDark}>Return</Small>\r\n                                            case 'refund':\r\n                                              return <Small bgcolor={bgSecondaryDark}>Refund</Small>\r\n                                            default:\r\n                                              return null\r\n                                          }\r\n                                        })()}\r\n                                      </TableCell>\r\n                                    </TableRow >\r\n\r\n                                  </>\r\n                                ))\r\n                              )}\r\n                            </TableBody>\r\n                          </Table>\r\n                          <div className='order_summary os-left' style={{ width: \"350px\", float: \"right\", padding: \"20px\" }}>\r\n                            <Table sx={{ border: \"0px\" }} aria-label=\"simple table\" key={'price-detail'}>\r\n                              <TableBody sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                <TableRow>\r\n                                  <TableCell align=\"left\"><ItemContent>Total MRP</ItemContent></TableCell>\r\n                                  <TableCell align=\"right\"><ItemContent>{process.env.REACT_APP_CURRENCY}. {order.total_mrp}</ItemContent></TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                  <TableCell align=\"left\"><ItemContent>Additional Discount</ItemContent></TableCell>\r\n                                  <TableCell align=\"right\"><ItemContent>{process.env.REACT_APP_CURRENCY}. {(order.additional_discount) ?? 0.0}</ItemContent></TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                  <TableCell align=\"left\"><ItemContent>Delivery Charges</ItemContent></TableCell>\r\n                                  <TableCell align=\"right\"><ItemContent>{process.env.REACT_APP_CURRENCY}. {(order.delivery_charges) ?? 0.0}</ItemContent></TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow className='row-highlighter'>\r\n                                  <TableCell align=\"left\"><ItemContent>Total Savings</ItemContent></TableCell>\r\n                                  <TableCell align=\"right\"><ItemContent>{process.env.REACT_APP_CURRENCY}. {(order.total_savings) ?? 0.0}</ItemContent></TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                  <TableCell align=\"left\" colSpan={2}><Divider /></TableCell>\r\n                                </TableRow>\r\n\r\n                                <TableRow className='total-payable'>\r\n                                  <TableCell align=\"left\"><ItemContent>Total Payable</ItemContent></TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <ItemContent><span className='price'>\r\n                                      {process.env.REACT_APP_CURRENCY}. {order.total_payable}\r\n                                    </span>\r\n                                    </ItemContent>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableBody>\r\n                            </Table>\r\n                          </div>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </ContentBox>\r\n        </Card>\r\n\r\n      </Container >\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default ViewPurchaseDetails;\r\n"],"sourceRoot":""}