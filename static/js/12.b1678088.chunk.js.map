{"version":3,"sources":["app/views/dashboard/shared/DashStatCard.js","app/views/dashboard/shared/RowCards.jsx","app/views/dashboard/shared/StatCards.jsx","app/views/dashboard/shared/StatCards2.jsx","app/views/dashboard/shared/TopSellingTable.jsx","app/views/dashboard/Analytics.jsx","app/views/dashboard/shared/UpgradeCard.jsx"],"names":["StyledCard","styled","Card","theme","display","flexWrap","alignItems","justifyContent","padding","background","palette","paper","breakpoints","down","ContentBox","Box","color","text","secondary","opacity","fontSize","primary","main","Heading","margin","marginTop","fontWeight","StatCards","Grid","container","spacing","sx","mb","name","amount","icon","map","item","index","xs","md","elevation","ml","Icon","className","Span","marginLeft","Fab","boxShadow","backgroundColor","error","Avatar","width","height","textcolor","flexGrow","overflow","borderRadius","paddingLeft","paddingRight","marginBottom","textTransform","Table","minWidth","whiteSpace","borderBottom","bgcolor","textAlign","position","convertHexToRGB","paddingTop","paddingBottom","marginRight","Analytics","useTheme","style","lg","sm","DashStatCard"],"mappings":"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","file":"static/js/12.b1678088.chunk.js","sourcesContent":["import { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\r\nimport { Small } from 'app/components/Typography';\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '24px !important',\r\n  background: theme.palette.background.paper,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  '& small': { color: theme.palette.text.secondary },\r\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\r\n}));\r\n\r\nconst Heading = styled('h6')(({ theme }) => ({\r\n  margin: 0,\r\n  marginTop: '4px',\r\n  fontSize: '14px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst StatCards = () => {\r\n  const cardList = [\r\n    { name: 'Total Medicine', amount: 5000, icon: 'assessment' },\r\n    { name: 'Out of Stock', amount: '15', icon: 'group' },\r\n    { name: 'Available Stock', amount: '100', icon: 'inventory' },\r\n    { name: 'Expire Medicine', amount: '10', icon: 'shopping_cart' },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={3} sx={{ mb: '24px' }}>\r\n      {cardList.map((item, index) => (\r\n        <Grid item xs={12} md={3} key={index}>\r\n          <StyledCard elevation={6}>\r\n            <ContentBox>\r\n              <Box ml=\"12px\">\r\n                <Small>{item.name}</Small>\r\n                <Heading>{item.amount}</Heading>\r\n              </Box>\r\n            </ContentBox>\r\n            <ContentBox>\r\n              <Box ml=\"12px\">\r\n                <Icon className=\"icon\">{item.icon}</Icon>\r\n              </Box>\r\n            </ContentBox>\r\n            {/* <Tooltip title=\"View Details\" placement=\"top\">\r\n              <IconButton>\r\n                <Icon>arrow_right_alt</Icon>\r\n              </IconButton>\r\n            </Tooltip> */}\r\n          </StyledCard>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatCards;\r\n","import {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Fab,\n  Grid,\n  Hidden,\n  Icon,\n  IconButton,\n  styled,\n  useTheme,\n} from '@mui/material';\nimport { Span } from 'app/components/Typography';\nimport { format } from 'date-fns';\nimport { Fragment } from 'react';\n\nconst ProjectName = styled(Span)(({ theme }) => ({\n  marginLeft: 24,\n  fontWeight: '500',\n  [theme.breakpoints.down('sm')]: { marginLeft: 4 },\n}));\n\nconst StarOutline = styled(Fab)(() => ({\n  marginLeft: 0,\n  boxShadow: 'none',\n  background: '#08ad6c !important',\n  backgroundColor: 'rgba(9, 182, 109, 1) !important',\n}));\n\nconst DateRange = styled(Fab)(({ theme }) => ({\n  marginLeft: 0,\n  boxShadow: 'none',\n  color: 'white !important',\n  background: `${theme.palette.error.main} !important`,\n}));\n\nconst StyledAvatar = styled(Avatar)(() => ({\n  width: '32px !important',\n  height: '32px !important',\n}));\n\nconst RowCards = () => {\n  const { palette } = useTheme();\n  const textMuted = palette.text.secondary;\n\n  return [1, 2, 3, 4].map((id) => (\n    <Fragment key={id}>\n      <Card sx={{ py: 1, px: 2 }} className=\"project-card\">\n        <Grid container alignItems=\"center\">\n          <Grid item md={5} xs={7}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Checkbox />\n              <Hidden smDown>\n                {id % 2 === 1 ? (\n                  <StarOutline size=\"small\">\n                    <Icon>star_outline</Icon>\n                  </StarOutline>\n                ) : (\n                  <DateRange size=\"small\">\n                    <Icon>date_range</Icon>\n                  </DateRange>\n                )}\n              </Hidden>\n              <ProjectName>Project {id}</ProjectName>\n            </Box>\n          </Grid>\n\n          <Grid item md={3} xs={4}>\n            <Box color={textMuted}>{format(new Date().getTime(), 'MM/dd/yyyy hh:mma')}</Box>\n          </Grid>\n\n          <Hidden smDown>\n            <Grid item xs={3}>\n              <Box display=\"flex\" position=\"relative\" marginLeft=\"-0.875rem !important\">\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\n                <StyledAvatar src=\"/assets/images/face-4.jpg\" />\n                <StyledAvatar sx={{ fontSize: '14px' }}>+3</StyledAvatar>\n              </Box>\n            </Grid>\n          </Hidden>\n\n          <Grid item xs={1}>\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <IconButton>\n                <Icon>more_vert</Icon>\n              </IconButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n      <Box py={1} />\n    </Fragment>\n  ));\n};\n\nexport default RowCards;\n","import { Box, Card, Grid, Icon, IconButton, styled, Tooltip } from '@mui/material';\nimport { Small } from 'app/components/Typography';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '24px !important',\n  background: theme.palette.background.paper,\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\n}));\n\nconst ContentBox = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  '& small': { color: theme.palette.text.secondary },\n  '& .icon': { opacity: 0.6, fontSize: '44px', color: theme.palette.primary.main },\n}));\n\nconst Heading = styled('h6')(({ theme }) => ({\n  margin: 0,\n  marginTop: '4px',\n  fontSize: '14px',\n  fontWeight: '500',\n  color: theme.palette.primary.main,\n}));\n\nconst StatCards = () => {\n  const cardList = [\n    { name: 'New Leads', amount: 3050, icon: 'group' },\n    { name: 'This week Sales', amount: '$80,500', icon: 'attach_money' },\n    { name: 'Inventory Status', amount: '8.5% Stock Surplus', icon: 'store' },\n    { name: 'Orders to deliver', amount: '305 Orders', icon: 'shopping_cart' },\n  ];\n\n  return (\n    <Grid container spacing={3} sx={{ mb: '24px' }}>\n      {cardList.map((item, index) => (\n        <Grid item xs={12} md={6} key={index}>\n          <StyledCard elevation={6}>\n            <ContentBox>\n              <Icon className=\"icon\">{item.icon}</Icon>\n              <Box ml=\"12px\">\n                <Small>{item.name}</Small>\n                <Heading>{item.amount}</Heading>\n              </Box>\n            </ContentBox>\n\n            <Tooltip title=\"View Details\" placement=\"top\">\n              <IconButton>\n                <Icon>arrow_right_alt</Icon>\n              </IconButton>\n            </Tooltip>\n          </StyledCard>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default StatCards;\n","import { Card, Fab, Grid, Icon, lighten, styled, useTheme } from '@mui/material';\n\nconst ContentBox = styled('div')(() => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n}));\n\nconst FabIcon = styled(Fab)(() => ({\n  width: '44px !important',\n  height: '44px !important',\n  boxShadow: 'none !important',\n}));\n\nconst H3 = styled('h3')(({ textcolor }) => ({\n  margin: 0,\n  color: textcolor,\n  fontWeight: '500',\n  marginLeft: '12px',\n}));\n\nconst H1 = styled('h1')(({ theme }) => ({\n  margin: 0,\n  flexGrow: 1,\n  color: theme.palette.text.secondary,\n}));\n\nconst Span = styled('span')(({ textcolor }) => ({\n  fontSize: '13px',\n  color: textcolor,\n  marginLeft: '4px',\n}));\n\nconst IconBox = styled('div')(() => ({\n  width: 16,\n  height: 16,\n  color: '#fff',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '300px ',\n  justifyContent: 'center',\n  '& .icon': { fontSize: '14px' },\n}));\n\nconst StatCards2 = () => {\n  const { palette } = useTheme();\n  const textError = palette.error.main;\n  const bgError = lighten(palette.error.main, 0.85);\n\n  return (\n    <Grid container spacing={3} sx={{ mb: 3 }}>\n      <Grid item xs={12} md={6}>\n        <Card elevation={3} sx={{ p: 2 }}>\n          <ContentBox>\n            <FabIcon size=\"medium\" sx={{ background: 'rgba(9, 182, 109, 0.15)' }}>\n              <Icon sx={{ color: '#08ad6c' }}>trending_up</Icon>\n            </FabIcon>\n            <H3 textcolor={'#08ad6c'}>Active Users</H3>\n          </ContentBox>\n\n          <ContentBox sx={{ pt: 2 }}>\n            <H1>10.8k</H1>\n            <IconBox sx={{ background: 'rgba(9, 182, 109, 0.15)' }}>\n              <Icon className=\"icon\">expand_less</Icon>\n            </IconBox>\n            <Span textcolor={'#08ad6c'}>(+21%)</Span>\n          </ContentBox>\n        </Card>\n      </Grid>\n\n      <Grid item xs={12} md={6}>\n        <Card elevation={3} sx={{ p: 2 }}>\n          <ContentBox>\n            <FabIcon size=\"medium\" sx={{ background: bgError, overflow: 'hidden' }}>\n              <Icon sx={{ color: textError }}>star_outline</Icon>\n            </FabIcon>\n            <H3 textcolor={textError}>Transactions</H3>\n          </ContentBox>\n\n          <ContentBox sx={{ pt: 2 }}>\n            <H1>$2.8M</H1>\n            <IconBox sx={{ background: bgError }}>\n              <Icon className=\"icon\">expand_less</Icon>\n            </IconBox>\n            <Span textcolor={textError}>(+21%)</Span>\n          </ContentBox>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default StatCards2;\n","import {\n  Avatar,\n  Box,\n  Card,\n  Icon,\n  IconButton,\n  MenuItem,\n  Select,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  useTheme,\n} from '@mui/material';\nimport { Paragraph } from 'app/components/Typography';\n\nconst CardHeader = styled(Box)(() => ({\n  display: 'flex',\n  paddingLeft: '24px',\n  paddingRight: '24px',\n  marginBottom: '12px',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  textTransform: 'capitalize',\n}));\n\nconst ProductTable = styled(Table)(() => ({\n  minWidth: 400,\n  whiteSpace: 'pre',\n  '& small': {\n    width: 50,\n    height: 15,\n    borderRadius: 500,\n    boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\n  },\n  '& td': { borderBottom: 'none' },\n  '& td:first-of-type': { paddingLeft: '16px !important' },\n}));\n\nconst Small = styled('small')(({ bgcolor }) => ({\n  width: 50,\n  height: 15,\n  color: '#fff',\n  padding: '2px 8px',\n  borderRadius: '4px',\n  overflow: 'hidden',\n  background: bgcolor,\n  boxShadow: '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\n}));\n\nconst TopSellingTable = () => {\n  const { palette } = useTheme();\n  const bgError = palette.error.main;\n  const bgPrimary = palette.primary.main;\n  const bgSecondary = palette.secondary.main;\n\n  return (\n    <Card elevation={3} sx={{ pt: '20px', mb: 3 }}>\n      <CardHeader>\n        <Title>top selling products</Title>\n        <Select size=\"small\" defaultValue=\"this_month\">\n          <MenuItem value=\"this_month\">This Month</MenuItem>\n          <MenuItem value=\"last_month\">Last Month</MenuItem>\n        </Select>\n      </CardHeader>\n\n      <Box overflow=\"auto\">\n        <ProductTable>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ px: 3 }} colSpan={4}>\n                Name\n              </TableCell>\n              <TableCell sx={{ px: 0 }} colSpan={2}>\n                Revenue\n              </TableCell>\n              <TableCell sx={{ px: 0 }} colSpan={2}>\n                Stock Status\n              </TableCell>\n              <TableCell sx={{ px: 0 }} colSpan={1}>\n                Action\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {productList.map((product, index) => (\n              <TableRow key={index} hover>\n                <TableCell colSpan={4} align=\"left\" sx={{ px: 0, textTransform: 'capitalize' }}>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Avatar src={product.imgUrl} />\n                    <Paragraph sx={{ m: 0, ml: 4 }}>{product.name}</Paragraph>\n                  </Box>\n                </TableCell>\n\n                <TableCell align=\"left\" colSpan={2} sx={{ px: 0, textTransform: 'capitalize' }}>\n                  ${product.price > 999 ? (product.price / 1000).toFixed(1) + 'k' : product.price}\n                </TableCell>\n\n                <TableCell sx={{ px: 0 }} align=\"left\" colSpan={2}>\n                  {product.available ? (\n                    product.available < 20 ? (\n                      <Small bgcolor={bgSecondary}>{product.available} available</Small>\n                    ) : (\n                      <Small bgcolor={bgPrimary}>in stock</Small>\n                    )\n                  ) : (\n                    <Small bgcolor={bgError}>out of stock</Small>\n                  )}\n                </TableCell>\n\n                <TableCell sx={{ px: 0 }} colSpan={1}>\n                  <IconButton>\n                    <Icon color=\"primary\">edit</Icon>\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </ProductTable>\n      </Box>\n    </Card>\n  );\n};\n\nconst productList = [\n  {\n    imgUrl: '/assets/images/products/headphone-2.jpg',\n    name: 'earphone',\n    price: 100,\n    available: 15,\n  },\n  {\n    imgUrl: '/assets/images/products/headphone-3.jpg',\n    name: 'earphone',\n    price: 1500,\n    available: 30,\n  },\n  {\n    imgUrl: '/assets/images/products/iphone-2.jpg',\n    name: 'iPhone x',\n    price: 1900,\n    available: 35,\n  },\n  {\n    imgUrl: '/assets/images/products/iphone-1.jpg',\n    name: 'iPhone x',\n    price: 100,\n    available: 0,\n  },\n  {\n    imgUrl: '/assets/images/products/headphone-3.jpg',\n    name: 'Head phone',\n    price: 1190,\n    available: 5,\n  },\n];\n\nexport default TopSellingTable;\n","import { Card, Grid, styled, useTheme } from '@mui/material';\nimport { Fragment } from 'react';\nimport DashStatCard from './shared/DashStatCard';\nimport Campaigns from './shared/Campaigns';\nimport DoughnutChart from './shared/Doughnut';\nimport RowCards from './shared/RowCards';\nimport StatCards from './shared/StatCards';\nimport StatCards2 from './shared/StatCards2';\nimport TopSellingTable from './shared/TopSellingTable';\nimport UpgradeCard from './shared/UpgradeCard';\n\nconst ContentBox = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n}));\n\nconst Title = styled('span')(() => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginRight: '.5rem',\n  textTransform: 'capitalize',\n}));\n\nconst SubTitle = styled('span')(({ theme }) => ({\n  fontSize: '0.875rem',\n  color: theme.palette.text.secondary,\n}));\n\nconst H4 = styled('h4')(({ theme }) => ({\n  fontSize: '1rem',\n  fontWeight: '500',\n  marginBottom: '16px',\n  textTransform: 'capitalize',\n  color: theme.palette.text.secondary,\n}));\n\nconst Analytics = () => {\n  const { palette } = useTheme();\n\n  return (\n    <Fragment>\n      <ContentBox className=\"analytics\">\n        <Grid container spacing={3} style={{marginTop :'0px'}}>\n          <Grid item lg={12} md={12} sm={12} xs={12}>\n            <DashStatCard />\n          </Grid>\n          {/* <Grid item lg={8} md={8} sm={12} xs={12}>\n            <StatCards />\n            <TopSellingTable />\n            <StatCards2 />\n\n            <H4>Ongoing Projects</H4>\n            <RowCards />\n          </Grid>\n\n          <Grid item lg={4} md={4} sm={12} xs={12}>\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\n              <Title>Traffic Sources</Title>\n              <SubTitle>Last 30 days</SubTitle>\n\n              <DoughnutChart\n                height=\"300px\"\n                color={[palette.primary.dark, palette.primary.main, palette.primary.light]}\n              />\n            </Card>\n\n            <UpgradeCard />\n            <Campaigns />\n          </Grid> */}\n        </Grid>\n      </ContentBox>\n    </Fragment>\n  );\n};\n\nexport default Analytics;\n","import { Button, Card, styled } from '@mui/material';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\n\r\nconst CardRoot = styled(Card)(({ theme }) => ({\r\n  marginBottom: '24px',\r\n  padding: '24px !important',\r\n  [theme.breakpoints.down('sm')]: { paddingLeft: '16px !important' },\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  padding: '24px !important',\r\n  background: `rgb(${convertHexToRGB(theme.palette.primary.main)}, 0.15) !important`,\r\n  [theme.breakpoints.down('sm')]: { padding: '16px !important' },\r\n}));\r\n\r\nconst Paragraph = styled('p')(({ theme }) => ({\r\n  margin: 0,\r\n  paddingTop: '24px',\r\n  paddingBottom: '24px',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst UpgradeCard = () => {\r\n  return (\r\n    <CardRoot>\r\n      <StyledCard elevation={0}>\r\n        <img src=\"/assets/images/illustrations/upgrade.svg\" alt=\"upgrade\" />\r\n\r\n        <Paragraph>\r\n          Upgrade to <b>MatX PRO</b> for <br /> more resources\r\n        </Paragraph>\r\n\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'uppercase' }}\r\n        >\r\n          upgrade now\r\n        </Button>\r\n      </StyledCard>\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default UpgradeCard;\r\n"],"sourceRoot":""}